// This file was generated by docs-search.
window.DocsSearchIndex["3"] = [["january",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Date","Component"],"Month"]}}},"moduleName":"Data.Date.Component","name":"January","packageInfo":{"tag":"package","value":"datetime"},"score":4,"sourceSpan":{"end":{"column":12,"line":47},"name":".spago\\p\\datetime-6.1.0\\src\\Data\\Date\\Component.purs","start":{"column":3,"line":47}}}]],["h1",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","annotation":null,"contents":[["DOM","HTML","Indexed"],"HTMLh1"]}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"h1","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":36,"line":514},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":514}}}]],["h1_",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"h1_","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":48,"line":517},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":517}}}]],["gdecodejson",[{"hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"kind":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]},"name":"row"},{"kind":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]},"name":"list"}],"fundeps":[[["list"],["row"]]],"superclasses":[]}},"moduleName":"Data.Argonaut.Decode.Class","name":"GDecodeJson","packageInfo":{"tag":"package","value":"argonaut-codecs"},"score":2,"sourceSpan":{"end":{"column":99,"line":108},"name":".spago\\p\\argonaut-codecs-9.1.0\\src\\Data\\Argonaut\\Decode\\Class.purs","start":{"column":1,"line":107}}},{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"row","kind":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]},"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"list","kind":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]},"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"proxy","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"row"},{"tag":"TypeVar","annotation":null,"contents":"list"}],"constraintClass":[["Data","Argonaut","Decode","Class"],"GDecodeJson"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Foreign","Object"],"Object"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"proxy"},{"tag":"TypeVar","annotation":null,"contents":"list"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Decode","Error"],"JsonDecodeError"]}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"TypeVar","annotation":null,"contents":"row"}]}}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","Argonaut","Decode","Class"],"GDecodeJson"],"typeClassArguments":[{"kind":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]},"name":"row"},{"kind":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim","RowList"],"RowList"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]},"name":"list"}]}},"moduleName":"Data.Argonaut.Decode.Class","name":"gDecodeJson","packageInfo":{"tag":"package","value":"argonaut-codecs"},"score":2,"sourceSpan":{"end":{"column":99,"line":108},"name":".spago\\p\\argonaut-codecs-9.1.0\\src\\Data\\Argonaut\\Decode\\Class.purs","start":{"column":3,"line":108}}}]],["february",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Date","Component"],"Month"]}}},"moduleName":"Data.Date.Component","name":"February","packageInfo":{"tag":"package","value":"datetime"},"score":4,"sourceSpan":{"end":{"column":13,"line":48},"name":".spago\\p\\datetime-6.1.0\\src\\Data\\Date\\Component.purs","start":{"column":3,"line":48}}}]],["fetch",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["JS","Fetch","Request"],"Request"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Promise","Internal"],"Promise"]},{"tag":"TypeConstructor","annotation":null,"contents":[["JS","Fetch","Response"],"Response"]}]}}]}]}},"moduleName":"JS.Fetch","name":"fetch","packageInfo":{"tag":"package","value":"js-fetch"},"score":1,"sourceSpan":{"end":{"column":46,"line":22},"name":".spago\\p\\js-fetch-0.2.1\\src\\JS\\Fetch.purs","start":{"column":1,"line":22}}},{"comments":"Implementation of `fetch`, see https://developer.mozilla.org/en-US/docs/Web/API/fetch\n\nUsage:\n```purescript\ndo\n  let requestUrl = \"https://httpbin.org/get\"\n  { status, text } <- fetch requestUrl { headers: { \"Accept\": \"application/json\" }}\n  responseBody <- text\n```\nA more complex example doing a Post request:\n```purescript\ndo\n  { status, json } <- fetch \"https://httpbin.org/post\"\n       { method: POST\n       , mode: RequestMode.Cors\n       , body: \"\"\"{\"hello\":\"world\"}\"\"\"\n       , headers: { \"Content-Type\": \"application/json\" }\n       , referrer: ReferrerUrl \"https://httpbin.org\"\n       }\n  foreignJsonValue <- json\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"input","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarVisible","identifier":"thruIn","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"thruOut","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"headers","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"body","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"input"},{"tag":"TypeVar","annotation":null,"contents":"thruIn"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Fetch","Internal","Request"],"HighlevelRequestOptions"]},{"tag":"TypeVar","annotation":null,"contents":"headers"}]},{"tag":"TypeVar","annotation":null,"contents":"body"}]}}],"constraintClass":[["Prim","Row"],"Union"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"output"},{"tag":"TypeVar","annotation":null,"contents":"thruOut"},{"tag":"TypeConstructor","annotation":null,"contents":[["JS","Fetch","Request"],"UnsafeRequestOptions"]}],"constraintClass":[["Prim","Row"],"Union"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"input"},{"tag":"TypeVar","annotation":null,"contents":"output"}],"constraintClass":[["Fetch","Internal","Request"],"ToCoreRequestOptions"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"TypeVar","annotation":null,"contents":"input"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Fetch","Internal","Response"],"Response"]}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Fetch","name":"fetch","packageInfo":{"tag":"package","value":"fetch"},"score":0,"sourceSpan":{"end":{"column":18,"line":68},"name":".spago\\p\\fetch-4.1.0\\src\\Fetch.purs","start":{"column":1,"line":61}}}]],["fetchoptions",[{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[],"type":{"tag":"RCons","annotation":null,"contents":["\u0000k\u0000e\u0000e\u0000p\u0000a\u0000l\u0000i\u0000v\u0000e",{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]},{"tag":"RCons","annotation":null,"contents":["\u0000s\u0000i\u0000g\u0000n\u0000a\u0000l",{"tag":"TypeConstructor","annotation":null,"contents":[["JS","Fetch","AbortController"],"AbortSignal"]},{"tag":"REmpty","annotation":null}]}]}}},"moduleName":"JS.Fetch","name":"FetchOptions","packageInfo":{"tag":"package","value":"js-fetch"},"score":1,"sourceSpan":{"end":{"column":4,"line":18},"name":".spago\\p\\js-fetch-0.2.1\\src\\JS\\Fetch.purs","start":{"column":1,"line":15}}}]],["fetchwithoptions",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"r","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"rx","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"r"},{"tag":"TypeVar","annotation":null,"contents":"rx"},{"tag":"TypeConstructor","annotation":null,"contents":[["JS","Fetch"],"FetchOptions"]}],"constraintClass":[["Prim","Row"],"Union"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["JS","Fetch","Request"],"Request"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Promise","Internal"],"Promise"]},{"tag":"TypeConstructor","annotation":null,"contents":[["JS","Fetch","Response"],"Response"]}]}}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"JS.Fetch","name":"fetchWithOptions","packageInfo":{"tag":"package","value":"js-fetch"},"score":1,"sourceSpan":{"end":{"column":112,"line":25},"name":".spago\\p\\js-fetch-0.2.1\\src\\JS\\Fetch.purs","start":{"column":1,"line":25}}}]],["effect",[{"comments":"A native effect. The type parameter denotes the return type of running the\neffect, that is, an `Effect Int` is a possibly-effectful computation which\neventually produces a value of the type `Int` when it finishes.\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"}]}},"moduleName":"Effect","name":"Effect","packageInfo":{"tag":"package","value":"effect"},"score":20,"sourceSpan":{"end":{"column":43,"line":16},"name":".spago\\p\\effect-4.0.0\\src\\Effect.purs","start":{"column":1,"line":16}}}]],["effectcanceler",[{"comments":"A canceler from an Effect action.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Canceler"]}]}},"moduleName":"Effect.Aff","name":"effectCanceler","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":42,"line":219},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff.purs","start":{"column":1,"line":219}}}]],["effectfn1",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"},{"name":"t1"}]}},"moduleName":"Effect.Uncurried","name":"EffectFn1","packageInfo":{"tag":"package","value":"effect"},"score":20,"sourceSpan":{"end":{"column":54,"line":138},"name":".spago\\p\\effect-4.0.0\\src\\Effect\\Uncurried.purs","start":{"column":1,"line":138}}}]],["effectfn10",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"},{"name":"t1"},{"name":"t2"},{"name":"t3"},{"name":"t4"},{"name":"t5"},{"name":"t6"},{"name":"t7"},{"name":"t8"},{"name":"t9"},{"name":"t10"}]}},"moduleName":"Effect.Uncurried","name":"EffectFn10","packageInfo":{"tag":"package","value":"effect"},"score":20,"sourceSpan":{"end":{"column":127,"line":174},"name":".spago\\p\\effect-4.0.0\\src\\Effect\\Uncurried.purs","start":{"column":1,"line":174}}}]],["effectfn2",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"},{"name":"t1"},{"name":"t2"}]}},"moduleName":"Effect.Uncurried","name":"EffectFn2","packageInfo":{"tag":"package","value":"effect"},"score":20,"sourceSpan":{"end":{"column":62,"line":142},"name":".spago\\p\\effect-4.0.0\\src\\Effect\\Uncurried.purs","start":{"column":1,"line":142}}}]],["effectfn3",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"},{"name":"t1"},{"name":"t2"},{"name":"t3"}]}},"moduleName":"Effect.Uncurried","name":"EffectFn3","packageInfo":{"tag":"package","value":"effect"},"score":20,"sourceSpan":{"end":{"column":70,"line":146},"name":".spago\\p\\effect-4.0.0\\src\\Effect\\Uncurried.purs","start":{"column":1,"line":146}}}]],["effectfn4",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"},{"name":"t1"},{"name":"t2"},{"name":"t3"},{"name":"t4"}]}},"moduleName":"Effect.Uncurried","name":"EffectFn4","packageInfo":{"tag":"package","value":"effect"},"score":20,"sourceSpan":{"end":{"column":78,"line":150},"name":".spago\\p\\effect-4.0.0\\src\\Effect\\Uncurried.purs","start":{"column":1,"line":150}}}]],["effectfn5",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"},{"name":"t1"},{"name":"t2"},{"name":"t3"},{"name":"t4"},{"name":"t5"}]}},"moduleName":"Effect.Uncurried","name":"EffectFn5","packageInfo":{"tag":"package","value":"effect"},"score":20,"sourceSpan":{"end":{"column":86,"line":154},"name":".spago\\p\\effect-4.0.0\\src\\Effect\\Uncurried.purs","start":{"column":1,"line":154}}}]],["effectfn6",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"},{"name":"t1"},{"name":"t2"},{"name":"t3"},{"name":"t4"},{"name":"t5"},{"name":"t6"}]}},"moduleName":"Effect.Uncurried","name":"EffectFn6","packageInfo":{"tag":"package","value":"effect"},"score":20,"sourceSpan":{"end":{"column":94,"line":158},"name":".spago\\p\\effect-4.0.0\\src\\Effect\\Uncurried.purs","start":{"column":1,"line":158}}}]],["effectfn7",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"},{"name":"t1"},{"name":"t2"},{"name":"t3"},{"name":"t4"},{"name":"t5"},{"name":"t6"},{"name":"t7"}]}},"moduleName":"Effect.Uncurried","name":"EffectFn7","packageInfo":{"tag":"package","value":"effect"},"score":20,"sourceSpan":{"end":{"column":102,"line":162},"name":".spago\\p\\effect-4.0.0\\src\\Effect\\Uncurried.purs","start":{"column":1,"line":162}}}]],["effectfn8",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"},{"name":"t1"},{"name":"t2"},{"name":"t3"},{"name":"t4"},{"name":"t5"},{"name":"t6"},{"name":"t7"},{"name":"t8"}]}},"moduleName":"Effect.Uncurried","name":"EffectFn8","packageInfo":{"tag":"package","value":"effect"},"score":20,"sourceSpan":{"end":{"column":110,"line":166},"name":".spago\\p\\effect-4.0.0\\src\\Effect\\Uncurried.purs","start":{"column":1,"line":166}}}]],["effectfn9",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"},{"name":"t1"},{"name":"t2"},{"name":"t3"},{"name":"t4"},{"name":"t5"},{"name":"t6"},{"name":"t7"},{"name":"t8"},{"name":"t9"}]}},"moduleName":"Effect.Uncurried","name":"EffectFn9","packageInfo":{"tag":"package","value":"effect"},"score":20,"sourceSpan":{"end":{"column":118,"line":170},"name":".spago\\p\\effect-4.0.0\\src\\Effect\\Uncurried.purs","start":{"column":1,"line":170}}}]],["effectfnaff",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[{"name":"a"}]}},"moduleName":"Effect.Aff.Compat","name":"EffectFnAff","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":99,"line":19},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff\\Compat.purs","start":{"column":1,"line":19}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Uncurried"],"EffectFn2"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff","Compat"],"EffectFnCb"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Exception"],"Error"]}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff","Compat"],"EffectFnCb"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff","Compat"],"EffectFnCanceler"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff","Compat"],"EffectFnAff"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}}},"moduleName":"Effect.Aff.Compat","name":"EffectFnAff","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":99,"line":19},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff\\Compat.purs","start":{"column":23,"line":19}}}]],["effectfncanceler",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[]}},"moduleName":"Effect.Aff.Compat","name":"EffectFnCanceler","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":104,"line":21},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff\\Compat.purs","start":{"column":1,"line":21}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Uncurried"],"EffectFn3"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Exception"],"Error"]}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff","Compat"],"EffectFnCb"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Exception"],"Error"]}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff","Compat"],"EffectFnCb"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff","Compat"],"EffectFnCanceler"]}]}}},"moduleName":"Effect.Aff.Compat","name":"EffectFnCanceler","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":104,"line":21},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff\\Compat.purs","start":{"column":26,"line":21}}}]],["effectfncb",[{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Uncurried"],"EffectFn1"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}}},"moduleName":"Effect.Aff.Compat","name":"EffectFnCb","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":37,"line":17},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff\\Compat.purs","start":{"column":1,"line":17}}}]],["challenge",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLKeygenElement"],"HTMLKeygenElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Web.HTML.HTMLKeygenElement","name":"challenge","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":63,"line":99},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLKeygenElement.purs","start":{"column":1,"line":99}}}]],["change",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Web","Event","Event"],"EventType"]}},"moduleName":"Web.HTML.Event.EventTypes","name":"change","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":20,"line":26},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\Event\\EventTypes.purs","start":{"column":1,"line":26}}}]],["changedtouches",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","TouchEvent","TouchEvent"],"TouchEvent"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","TouchEvent","TouchList"],"TouchList"]}]}},"moduleName":"Web.TouchEvent.TouchEvent","name":"changedTouches","packageInfo":{"tag":"package","value":"web-touchevents"},"score":1,"sourceSpan":{"end":{"column":57,"line":28},"name":".spago\\p\\web-touchevents-4.0.0\\src\\Web\\TouchEvent\\TouchEvent.purs","start":{"column":1,"line":28}}}]],["char",[{"comments":"A single character (UTF-16 code unit). The JavaScript representation is a\nnormal `String`, which is guaranteed to contain one code unit. This means\nthat astral plane characters (i.e. those with code point values greater\nthan `0xFFFF`) cannot be represented as `Char` values.\n\nConstruct values of this type with literals, using single quotes `'`:\n\n    x = 'a' :: Char\n","hashAnchor":"t","info":{"tag":"externData","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}},"moduleName":"Prim","name":"Char","packageInfo":{"tag":"builtin"},"score":0},{"comments":"Converts a string of length `1` to a character.\n\n**Unsafe:** throws runtime exception if length is not `1`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Char"]}]}},"moduleName":"Data.String.Unsafe","name":"char","packageInfo":{"tag":"package","value":"strings"},"score":4,"sourceSpan":{"end":{"column":38,"line":15},"name":".spago\\p\\strings-6.0.1\\src\\Data\\String\\Unsafe.purs","start":{"column":1,"line":15}}}]],["characterdata",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[]}},"moduleName":"Web.DOM.CharacterData","name":"CharacterData","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":42,"line":14},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\CharacterData.purs","start":{"column":1,"line":14}}}]],["characterset",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","Document"],"Document"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Web.DOM.Document","name":"characterSet","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":57,"line":89},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\Document.purs","start":{"column":1,"line":89}}}]],["charat",[{"comments":"Returns the character at the given index.\n\n**Unsafe:** throws runtime exception if the index is out of bounds.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Char"]}]}]}},"moduleName":"Data.String.Unsafe","name":"charAt","packageInfo":{"tag":"package","value":"strings"},"score":4,"sourceSpan":{"end":{"column":47,"line":10},"name":".spago\\p\\strings-6.0.1\\src\\Data\\String\\Unsafe.purs","start":{"column":1,"line":10}}},{"comments":"Returns the character at the given index, if the index is within bounds.\n\n```purescript\ncharAt 2 (NonEmptyString \"Hello\") == Just 'l'\ncharAt 10 (NonEmptyString \"Hello\") == Nothing\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Char"]}]}]}]}},"moduleName":"Data.String.NonEmpty.CodeUnits","name":"charAt","packageInfo":{"tag":"package","value":"strings"},"score":4,"sourceSpan":{"end":{"column":46,"line":117},"name":".spago\\p\\strings-6.0.1\\src\\Data\\String\\NonEmpty\\CodeUnits.purs","start":{"column":1,"line":117}}},{"comments":"Returns the character at the given index, if the index is within bounds.\n\n```purescript\ncharAt 2 \"Hello\" == Just 'l'\ncharAt 10 \"Hello\" == Nothing\n```\n\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Char"]}]}]}]}},"moduleName":"Data.String.CodeUnits","name":"charAt","packageInfo":{"tag":"package","value":"strings"},"score":4,"sourceSpan":{"end":{"column":38,"line":106},"name":".spago\\p\\strings-6.0.1\\src\\Data\\String\\CodeUnits.purs","start":{"column":1,"line":106}}}]],["charset",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLScriptElement"],"HTMLScriptElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Web.HTML.HTMLScriptElement","name":"charset","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":61,"line":62},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLScriptElement.purs","start":{"column":1,"line":62}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"r","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Properties"],"IProp"]},{"tag":"RCons","annotation":null,"contents":["\u0000c\u0000h\u0000a\u0000r\u0000s\u0000e\u0000t",{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Properties","name":"charset","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":65,"line":154},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Properties.purs","start":{"column":1,"line":154}}}]],["checked",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}},"moduleName":"Web.HTML.HTMLInputElement","name":"checked","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":61,"line":189},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLInputElement.purs","start":{"column":1,"line":189}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"r","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Properties"],"IProp"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Properties.ARIA","name":"checked","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":43,"line":19},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Properties\\ARIA.purs","start":{"column":1,"line":19}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"r","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Properties"],"IProp"]},{"tag":"RCons","annotation":null,"contents":["\u0000c\u0000h\u0000e\u0000c\u0000k\u0000e\u0000d",{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Properties","name":"checked","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":67,"line":267},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Properties.purs","start":{"column":1,"line":267}}}]],["checkvalid",[{"comments":"Check whether the underlying tree satisfies the height, size, and ordering invariants.\n\nThis function is provided for internal use.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]},"skolem":null}}},"moduleName":"Data.Set","name":"checkValid","packageInfo":{"tag":"package","value":"ordered-collections"},"score":5,"sourceSpan":{"end":{"column":50,"line":110},"name":".spago\\p\\ordered-collections-3.2.0\\src\\Data\\Set.purs","start":{"column":1,"line":110}}},{"comments":"Check whether the underlying tree satisfies the height, size, and ordering invariants.\n\nThis function is provided for internal use.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"k","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"v","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"k"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Map.Internal","name":"checkValid","packageInfo":{"tag":"package","value":"ordered-collections"},"score":5,"sourceSpan":{"end":{"column":54,"line":256},"name":".spago\\p\\ordered-collections-3.2.0\\src\\Data\\Map\\Internal.purs","start":{"column":1,"line":256}}}]],["checkvalidity",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}},"moduleName":"Web.HTML.HTMLTextAreaElement","name":"checkValidity","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":70,"line":190},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLTextAreaElement.purs","start":{"column":1,"line":190}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLSelectElement"],"HTMLSelectElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}},"moduleName":"Web.HTML.HTMLSelectElement","name":"checkValidity","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":68,"line":157},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLSelectElement.purs","start":{"column":1,"line":157}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLOutputElement"],"HTMLOutputElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}},"moduleName":"Web.HTML.HTMLOutputElement","name":"checkValidity","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":68,"line":116},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLOutputElement.purs","start":{"column":1,"line":116}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLObjectElement"],"HTMLObjectElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}},"moduleName":"Web.HTML.HTMLObjectElement","name":"checkValidity","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":68,"line":136},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLObjectElement.purs","start":{"column":1,"line":136}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLKeygenElement"],"HTMLKeygenElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}},"moduleName":"Web.HTML.HTMLKeygenElement","name":"checkValidity","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":68,"line":124},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLKeygenElement.purs","start":{"column":1,"line":124}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLInputElement"],"HTMLInputElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}},"moduleName":"Web.HTML.HTMLInputElement","name":"checkValidity","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":67,"line":313},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLInputElement.purs","start":{"column":1,"line":313}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLFormElement"],"HTMLFormElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}},"moduleName":"Web.HTML.HTMLFormElement","name":"checkValidity","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":66,"line":92},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLFormElement.purs","start":{"column":1,"line":92}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLFieldSetElement"],"HTMLFieldSetElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}},"moduleName":"Web.HTML.HTMLFieldSetElement","name":"checkValidity","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":70,"line":111},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLFieldSetElement.purs","start":{"column":1,"line":111}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLButtonElement"],"HTMLButtonElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}},"moduleName":"Web.HTML.HTMLButtonElement","name":"checkValidity","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":68,"line":146},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLButtonElement.purs","start":{"column":1,"line":146}}}]],["childelementcount",[{"comments":"The number of child elements.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","ParentNode"],"ParentNode"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}]}},"moduleName":"Web.DOM.ParentNode","name":"childElementCount","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":61,"line":40},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\ParentNode.purs","start":{"column":1,"line":40}}}]],["childnode",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[]}},"moduleName":"Web.DOM.ChildNode","name":"ChildNode","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":38,"line":7},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\ChildNode.purs","start":{"column":1,"line":7}}}]],["childnodes",[{"comments":"The children of the node.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","Internal","Types"],"NodeList"]}]}]}},"moduleName":"Web.DOM.Node","name":"childNodes","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":53,"line":97},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\Node.purs","start":{"column":1,"line":97}}}]],["childquery",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","ChildQuery"],"ChildQueryBox"]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"HalogenF"]},{"tag":"TypeVar","annotation":null,"contents":"state"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"output"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}}},"moduleName":"Halogen.Query.HalogenM","name":"ChildQuery","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":15,"line":48},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\HalogenM.purs","start":{"column":3,"line":48}}},{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"ps"},{"name":"g"},{"name":"o"},{"name":"a"},{"name":"f"},{"name":"b"}]}},"moduleName":"Halogen.Query.ChildQuery","name":"ChildQuery","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":15,"line":16},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\ChildQuery.purs","start":{"column":1,"line":12}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slot","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"slot"},{"tag":"TypeVar","annotation":null,"contents":"g"}]},{"tag":"TypeVar","annotation":null,"contents":"o"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Data","Slot"],"SlotStorage"]},{"tag":"TypeVar","annotation":null,"contents":"ps"}]},{"tag":"TypeVar","annotation":null,"contents":"slot"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}]}]},"skolem":null}},"skolem":null}}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"g"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","ChildQuery"],"ChildQuery"]},{"tag":"TypeVar","annotation":null,"contents":"ps"}]},{"tag":"TypeVar","annotation":null,"contents":"g"}]},{"tag":"TypeVar","annotation":null,"contents":"o"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}]}]}}},"moduleName":"Halogen.Query.ChildQuery","name":"ChildQuery","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":13,"line":13},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\ChildQuery.purs","start":{"column":30,"line":12}}}]],["childquerybox",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"kind":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]},"name":"ps"},{"name":"a"}]}},"moduleName":"Halogen.Query.ChildQuery","name":"ChildQueryBox","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":38,"line":10},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\ChildQuery.purs","start":{"column":1,"line":10}}}]],["children",[{"comments":"The child elements for the node.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","ParentNode"],"ParentNode"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","Internal","Types"],"HTMLCollection"]}]}]}},"moduleName":"Web.DOM.ParentNode","name":"children","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":63,"line":25},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\ParentNode.purs","start":{"column":1,"line":25}}}]],["choice",[{"comments":"The `Choice` class extends `Profunctor` with combinators for working with\nsum types.\n\n`left` and `right` lift values in a `Profunctor` to act on the `Left` and\n`Right` components of a sum, respectively.\n\nLooking at `Choice` through the intuition of inputs and outputs\nyields the following type signature:\n```\nleft ::  forall input output a. p input output -> p (Either input a) (Either output a)\nright :: forall input output a. p input output -> p (Either a input) (Either a output)\n```\nIf we specialize the profunctor `p` to the `function` arrow, we get the following type\nsignatures:\n```\nleft ::  forall input output a. (input -> output) -> (Either input a) -> (Either output a)\nright :: forall input output a. (input -> output) -> (Either a input) -> (Either a output)\n```\nWhen the `profunctor` is `Function` application, `left` allows you to map a function over the\nleft side of an `Either`, and `right` maps it over the right side (same as `map` would do).\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"p"}],"fundeps":[],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Data","Profunctor"],"Profunctor"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Data.Profunctor.Choice","name":"Choice","packageInfo":{"tag":"package","value":"profunctor"},"score":4,"sourceSpan":{"end":{"column":62,"line":30},"name":".spago\\p\\profunctor-6.0.1\\src\\Data\\Profunctor\\Choice.purs","start":{"column":1,"line":28}}}]],["choose",[{"comments":"Combine two alternatives.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Alt"],"Alt"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Either","name":"choose","packageInfo":{"tag":"package","value":"either"},"score":21,"sourceSpan":{"end":{"column":62,"line":213},"name":".spago\\p\\either-6.1.0\\src\\Data\\Either.purs","start":{"column":1,"line":213}}},{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Decide"],"Decide"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","Decide"],"Decide"],"typeClassArguments":[{"name":"f"}]}},"moduleName":"Data.Decide","name":"choose","packageInfo":{"tag":"package","value":"contravariant"},"score":1,"sourceSpan":{"end":{"column":65,"line":14},"name":".spago\\p\\contravariant-6.0.0\\src\\Data\\Decide.purs","start":{"column":3,"line":14}}},{"comments":"Creates a generator that outputs a value chosen from one of two existing\nexisting generators with even probability.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Control.Monad.Gen","name":"choose","packageInfo":{"tag":"package","value":"gen"},"score":7,"sourceSpan":{"end":{"column":54,"line":29},"name":".spago\\p\\gen-4.0.0\\src\\Control\\Monad\\Gen.purs","start":{"column":1,"line":29}}}]],["choosebool",[{"comments":"Chooses a random boolean value.\n","hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]},"skolem":null}},"typeClass":[["Control","Monad","Gen","Class"],"MonadGen"],"typeClassArguments":[{"name":"m"}]}},"moduleName":"Control.Monad.Gen.Class","name":"chooseBool","packageInfo":{"tag":"package","value":"gen"},"score":7,"sourceSpan":{"end":{"column":26,"line":21},"name":".spago\\p\\gen-4.0.0\\src\\Control\\Monad\\Gen\\Class.purs","start":{"column":3,"line":21}}}]],["choosefloat",[{"comments":"Chooses an floating point number in the specified (inclusive) range.\n","hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}]}]}]},"skolem":null}},"typeClass":[["Control","Monad","Gen","Class"],"MonadGen"],"typeClassArguments":[{"name":"m"}]}},"moduleName":"Control.Monad.Gen.Class","name":"chooseFloat","packageInfo":{"tag":"package","value":"gen"},"score":7,"sourceSpan":{"end":{"column":46,"line":18},"name":".spago\\p\\gen-4.0.0\\src\\Control\\Monad\\Gen\\Class.purs","start":{"column":3,"line":18}}}]],["chooseint",[{"comments":"Chooses an integer in the specified (inclusive) range.\n","hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}]}]}]},"skolem":null}},"typeClass":[["Control","Monad","Gen","Class"],"MonadGen"],"typeClassArguments":[{"name":"m"}]}},"moduleName":"Control.Monad.Gen.Class","name":"chooseInt","packageInfo":{"tag":"package","value":"gen"},"score":7,"sourceSpan":{"end":{"column":35,"line":15},"name":".spago\\p\\gen-4.0.0\\src\\Control\\Monad\\Gen\\Class.purs","start":{"column":3,"line":15}}}]],["chosen",[{"comments":"`chosen = choose id`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Decide"],"Decide"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Decide","name":"chosen","packageInfo":{"tag":"package","value":"contravariant"},"score":1,"sourceSpan":{"end":{"column":65,"line":41},"name":".spago\\p\\contravariant-6.0.0\\src\\Data\\Decide.purs","start":{"column":1,"line":41}}}]],["c6",[{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"},{"name":"b"},{"name":"c"},{"name":"d"},{"name":"e"},{"name":"z"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Coproduct","Nested"],"C5"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]},{"tag":"TypeVar","annotation":null,"contents":"e"}]},{"tag":"TypeVar","annotation":null,"contents":"z"}]}}]}}},"moduleName":"Data.Functor.Coproduct.Nested","name":"C6","packageInfo":{"tag":"package","value":"functors"},"score":4,"sourceSpan":{"end":{"column":49,"line":40},"name":".spago\\p\\functors-5.0.0\\src\\Data\\Functor\\Coproduct\\Nested.purs","start":{"column":1,"line":40}}}]],["biall",[{"comments":"Test whether a predicate holds at all positions in a data structure.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"c"}],"constraintClass":[["Data","BooleanAlgebra"],"BooleanAlgebra"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bifoldable","name":"biall","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":7,"line":197},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":1,"line":190}}}]],["biany",[{"comments":"Test whether a predicate holds at any position in a data structure.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"c"}],"constraintClass":[["Data","BooleanAlgebra"],"BooleanAlgebra"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bifoldable","name":"biany","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":7,"line":186},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":1,"line":179}}}]],["biapplicative",[{"comments":"`Biapplicative` captures type constructors of two arguments which support lifting of\nfunctions of zero or more arguments, in the sense of `Applicative`.\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"w"}],"fundeps":[],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"w"}],"constraintClass":[["Control","Biapply"],"Biapply"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Control.Biapplicative","name":"Biapplicative","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":40,"line":9},"name":".spago\\p\\bifunctors-6.1.0\\src\\Control\\Biapplicative.purs","start":{"column":1,"line":8}}}]],["biapply",[{"comments":"`Biapply` captures type constructors of two arguments which support lifting of\nfunctions of one or more arguments, in the sense of `Apply`.\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"w"}],"fundeps":[],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"w"}],"constraintClass":[["Data","Bifunctor"],"Bifunctor"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Control.Biapply","name":"Biapply","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":67,"line":19},"name":".spago\\p\\bifunctors-6.1.0\\src\\Control\\Biapply.purs","start":{"column":1,"line":18}}},{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"d","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"w"}],"constraintClass":[["Control","Biapply"],"Biapply"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Control","Biapply"],"Biapply"],"typeClassArguments":[{"name":"w"}]}},"moduleName":"Control.Biapply","name":"biapply","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":67,"line":19},"name":".spago\\p\\bifunctors-6.1.0\\src\\Control\\Biapply.purs","start":{"column":3,"line":19}}}]],["biapplyfirst",[{"comments":"Keep the results of the second computation.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"d","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"w"}],"constraintClass":[["Control","Biapply"],"Biapply"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Control.Biapply","name":"biapplyFirst","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":71,"line":24},"name":".spago\\p\\bifunctors-6.1.0\\src\\Control\\Biapply.purs","start":{"column":1,"line":24}}}]],["biapplysecond",[{"comments":"Keep the results of the first computation.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"d","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"w"}],"constraintClass":[["Control","Biapply"],"Biapply"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Control.Biapply","name":"biapplySecond","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":72,"line":30},"name":".spago\\p\\bifunctors-6.1.0\\src\\Control\\Biapply.purs","start":{"column":1,"line":30}}}]],["bifold",[{"comments":"Fold a data structure, accumulating values in a monoidal type.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bifoldable","name":"bifold","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":61,"line":142},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":1,"line":142}}}]],["bifoldable",[{"comments":"`Bifoldable` represents data structures with two type arguments which can be\nfolded.\n\nA fold for such a structure requires two step functions, one for each type\nargument. Type class instances should choose the appropriate step function based\non the type of the element encountered at each point of the fold.\n\nDefault implementations are provided by the following functions:\n\n- `bifoldrDefault`\n- `bifoldlDefault`\n- `bifoldMapDefaultR`\n- `bifoldMapDefaultL`\n\nNote: some combinations of the default implementations are unsafe to\nuse together - causing a non-terminating mutually recursive cycle.\nThese combinations are documented per function.\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"p"}],"fundeps":[],"superclasses":[]}},"moduleName":"Data.Bifoldable","name":"Bifoldable","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":76,"line":40},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":1,"line":37}}}]],["bifoldl",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"p","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"p"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","Bifoldable"],"Bifoldable"],"typeClassArguments":[{"name":"p"}]}},"moduleName":"Data.Bifoldable","name":"bifoldl","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":77,"line":39},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":3,"line":39}}}]],["bifoldldefault",[{"comments":"A default implementation of `bifoldl` using `bifoldMap`.\n\nNote: when defining a `Bifoldable` instance, this function is unsafe to\nuse in combination with `bifoldMapDefaultL`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"p","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"p"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bifoldable","name":"bifoldlDefault","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":7,"line":105},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":1,"line":98}}}]],["bifoldmap",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"p","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"p"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","Bifoldable"],"Bifoldable"],"typeClassArguments":[{"name":"p"}]}},"moduleName":"Data.Bifoldable","name":"bifoldMap","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":76,"line":40},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":3,"line":40}}}]],["bifoldmapdefaultl",[{"comments":"A default implementation of `bifoldMap` using `bifoldl`.\n\nNote: when defining a `Bifoldable` instance, this function is unsafe to\nuse in combination with `bifoldlDefault`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"p","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"p"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bifoldable","name":"bifoldMapDefaultL","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":7,"line":137},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":1,"line":130}}}]],["bifoldmapdefaultr",[{"comments":"A default implementation of `bifoldMap` using `bifoldr`.\n\nNote: when defining a `Bifoldable` instance, this function is unsafe to\nuse in combination with `bifoldrDefault`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"p","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"p"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bifoldable","name":"bifoldMapDefaultR","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":7,"line":123},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":1,"line":116}}}]],["bifoldr",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"p","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"p"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","Bifoldable"],"Bifoldable"],"typeClassArguments":[{"name":"p"}]}},"moduleName":"Data.Bifoldable","name":"bifoldr","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":77,"line":38},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":3,"line":38}}}]],["bifoldrdefault",[{"comments":"A default implementation of `bifoldr` using `bifoldMap`.\n\nNote: when defining a `Bifoldable` instance, this function is unsafe to\nuse in combination with `bifoldMapDefaultR`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"p","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"p"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bifoldable","name":"bifoldrDefault","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":7,"line":91},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":1,"line":84}}}]],["bifor",[{"comments":"Traverse a data structure, accumulating effects and results using an `Applicative` functor.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"d","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bitraversable"],"Bitraversable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bitraversable","name":"bifor","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":15,"line":117},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bitraversable.purs","start":{"column":1,"line":110}}}]],["bifor_",[{"comments":"A version of `bitraverse_` with the data structure as the first argument.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"d","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bifoldable","name":"bifor_","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":12,"line":165},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":1,"line":158}}}]],["bifunctor",[{"comments":"A `Bifunctor` is a `Functor` from the pair category `(Type, Type)` to `Type`.\n\nA type constructor with two type arguments can be made into a `Bifunctor` if\nboth of its type arguments are covariant.\n\nThe `bimap` function maps a pair of functions over the two type arguments\nof the bifunctor.\n\nLaws:\n\n- Identity: `bimap identity identity == identity`\n- Composition: `bimap f1 g1 <<< bimap f2 g2 == bimap (f1 <<< f2) (g1 <<< g2)`\n\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"f"}],"fundeps":[],"superclasses":[]}},"moduleName":"Data.Bifunctor","name":"Bifunctor","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":66,"line":24},"name":".spago\\p\\bifunctors-6.1.0\\src\\Data\\Bifunctor.purs","start":{"column":1,"line":23}}}]],["bihoistcompose",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"g","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"h","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Functor"],"Functor"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"h"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"g"},{"tag":"TypeVar","annotation":null,"contents":"i"}]}}]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Compose"],"Compose"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"g"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Compose"],"Compose"]},{"tag":"TypeVar","annotation":null,"contents":"h"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Functor.Compose","name":"bihoistCompose","packageInfo":{"tag":"package","value":"functors"},"score":4,"sourceSpan":{"end":{"column":17,"line":23},"name":".spago\\p\\functors-5.0.0\\src\\Data\\Functor\\Compose.purs","start":{"column":1,"line":17}}}]],["bihoistcoproduct",[{"comments":"Change the underlying functors in a coproduct\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"g","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"h","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"h"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"g"},{"tag":"TypeVar","annotation":null,"contents":"i"}]}}]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"g"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","annotation":null,"contents":"h"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Functor.Coproduct","name":"bihoistCoproduct","packageInfo":{"tag":"package","value":"functors"},"score":4,"sourceSpan":{"end":{"column":19,"line":37},"name":".spago\\p\\functors-5.0.0\\src\\Data\\Functor\\Coproduct.purs","start":{"column":1,"line":32}}}]],["bihoistproduct",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"g","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"h","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"h"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"g"},{"tag":"TypeVar","annotation":null,"contents":"i"}]}}]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"g"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","annotation":null,"contents":"h"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Functor.Product","name":"bihoistProduct","packageInfo":{"tag":"package","value":"functors"},"score":4,"sourceSpan":{"end":{"column":17,"line":24},"name":".spago\\p\\functors-5.0.0\\src\\Data\\Functor\\Product.purs","start":{"column":1,"line":19}}}]],["bilift2",[{"comments":"Lift a function of two arguments.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"d","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"e","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"w"}],"constraintClass":[["Control","Biapply"],"Biapply"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"d"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"e"}]},{"tag":"TypeVar","annotation":null,"contents":"f"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"e"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"f"}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Control.Biapply","name":"bilift2","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":11,"line":43},"name":".spago\\p\\bifunctors-6.1.0\\src\\Control\\Biapply.purs","start":{"column":1,"line":36}}}]],["bilift3",[{"comments":"Lift a function of three arguments.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"d","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"e","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"g","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"h","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"w"}],"constraintClass":[["Control","Biapply"],"Biapply"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"e"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"g"}]},{"tag":"TypeVar","annotation":null,"contents":"h"}]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"e"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"f"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"g"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"d"}]},{"tag":"TypeVar","annotation":null,"contents":"h"}]}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Control.Biapply","name":"bilift3","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":11,"line":55},"name":".spago\\p\\bifunctors-6.1.0\\src\\Control\\Biapply.purs","start":{"column":1,"line":47}}}]],["bimap",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"d","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Bifunctor"],"Bifunctor"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","Bifunctor"],"Bifunctor"],"typeClassArguments":[{"name":"f"}]}},"moduleName":"Data.Bifunctor","name":"bimap","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":66,"line":24},"name":".spago\\p\\bifunctors-6.1.0\\src\\Data\\Bifunctor.purs","start":{"column":3,"line":24}}}]],["binary",[{"comments":"The base-2 system.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Int"],"Radix"]}},"moduleName":"Data.Int","name":"binary","packageInfo":{"tag":"package","value":"integers"},"score":5,"sourceSpan":{"end":{"column":16,"line":178},"name":".spago\\p\\integers-6.0.0\\src\\Data\\Int.purs","start":{"column":1,"line":178}}}]],["bind",[{"comments":"The `Bind` type class extends the [`Apply`](#apply) type class with a\n\"bind\" operation `(>>=)` which composes computations in sequence, using\nthe return value of one computation to determine the next computation.\n\nThe `>>=` operator can also be expressed using `do` notation, as follows:\n\n```purescript\nx >>= f = do y <- x\n             f y\n```\n\nwhere the function argument of `f` is given the name `y`.\n\nInstances must satisfy the following laws in addition to the `Apply`\nlaws:\n\n- Associativity: `(x >>= f) >>= g = x >>= (\\k -> f k >>= g)`\n- Apply Superclass: `apply f x = f >>= \\f’ -> map f’ x`\n\nAssociativity tells us that we can regroup operations which use `do`\nnotation so that we can unambiguously write, for example:\n\n```purescript\ndo x <- m1\n   y <- m2 x\n   m3 x y\n```\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"m"}],"fundeps":[],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Apply"],"Apply"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Control.Bind","name":"Bind","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":47,"line":57},"name":".spago\\p\\prelude-6.0.2\\src\\Control\\Bind.purs","start":{"column":1,"line":56}}},{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Bind"],"Bind"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Control","Bind"],"Bind"],"typeClassArguments":[{"name":"m"}]}},"moduleName":"Control.Bind","name":"bind","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":47,"line":57},"name":".spago\\p\\prelude-6.0.2\\src\\Control\\Bind.purs","start":{"column":3,"line":57}}}]],["bindflipped",[{"comments":"`bindFlipped` is `bind` with its arguments reversed. For example:\n\n```purescript\nprint =<< random\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Bind"],"Bind"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Control.Bind","name":"bindFlipped","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":64,"line":66},"name":".spago\\p\\prelude-6.0.2\\src\\Control\\Bind.purs","start":{"column":1,"line":66}}}]],["bipure",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"w"}],"constraintClass":[["Control","Biapplicative"],"Biapplicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Control","Biapplicative"],"Biapplicative"],"typeClassArguments":[{"name":"w"}]}},"moduleName":"Control.Biapplicative","name":"bipure","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":40,"line":9},"name":".spago\\p\\bifunctors-6.1.0\\src\\Control\\Biapplicative.purs","start":{"column":3,"line":9}}}]],["bisequence",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bitraversable"],"Bitraversable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","Bitraversable"],"Bitraversable"],"typeClassArguments":[{"name":"t"}]}},"moduleName":"Data.Bitraversable","name":"bisequence","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":74,"line":39},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bitraversable.purs","start":{"column":3,"line":39}}}]],["bisequence_",[{"comments":"Collapse a data structure, collecting effects using an `Applicative` functor,\nignoring the final result.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bifoldable","name":"bisequence_","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":12,"line":175},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":1,"line":170}}}]],["bisequencedefault",[{"comments":"A default implementation of `bisequence` using `bitraverse`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bitraversable"],"Bitraversable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bitraversable","name":"bisequenceDefault","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":15,"line":106},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bitraversable.purs","start":{"column":1,"line":101}}}]],["bitraversable",[{"comments":"`Bitraversable` represents data structures with two type arguments which can be\ntraversed.\n\nA traversal for such a structure requires two functions, one for each type\nargument. Type class instances should choose the appropriate function based\non the type of the element encountered at each point of the traversal.\n\nDefault implementations are provided by the following functions:\n\n- `bitraverseDefault`\n- `bisequenceDefault`\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"t"}],"fundeps":[],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bifunctor"],"Bifunctor"],"constraintData":null,"constraintKindArgs":[]},{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Data.Bitraversable","name":"Bitraversable","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":74,"line":39},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bitraversable.purs","start":{"column":1,"line":37}}}]],["bitraverse",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"d","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bitraversable"],"Bitraversable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","Bitraversable"],"Bitraversable"],"typeClassArguments":[{"name":"t"}]}},"moduleName":"Data.Bitraversable","name":"bitraverse","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":98,"line":38},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bitraversable.purs","start":{"column":3,"line":38}}}]],["bitraverse_",[{"comments":"Traverse a data structure, accumulating effects using an `Applicative` functor,\nignoring the final result.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"d","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bifoldable"],"Bifoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bifoldable","name":"bitraverse_","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":12,"line":154},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bifoldable.purs","start":{"column":1,"line":147}}}]],["bitraversedefault",[{"comments":"A default implementation of `bitraverse` using `bisequence` and `bimap`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"d","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bitraversable"],"Bitraversable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"d"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"c"}]},{"tag":"TypeVar","annotation":null,"contents":"d"}]}}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bitraversable","name":"bitraverseDefault","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":15,"line":97},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bitraversable.purs","start":{"column":1,"line":90}}}]],["bivoid",[{"comments":"The bivoid function is used to ignore the types wrapped by a Bifunctor.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Bifunctor"],"Bifunctor"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bifunctor","name":"bivoid","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":60,"line":35},"name":".spago\\p\\bifunctors-6.1.0\\src\\Data\\Bifunctor.purs","start":{"column":1,"line":35}}}]],["_left",[{"comments":"Prism for the `Left` constructor of `Either`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Prism"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Lens.Prism.Either","name":"_Left","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":59,"line":12},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Prism\\Either.purs","start":{"column":1,"line":12}}},{"comments":"Prism for the `left` of a `Coproduct`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"g","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"h","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Prism"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"g"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","annotation":null,"contents":"h"}]},{"tag":"TypeVar","annotation":null,"contents":"g"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"h"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Lens.Prism.Coproduct","name":"_Left","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":79,"line":11},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Prism\\Coproduct.purs","start":{"column":1,"line":11}}}]],["*=",[{"hashAnchor":"v","info":{"tag":"valueAlias"},"moduleName":"Data.Lens.Setter","name":"(*=)","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":27,"line":68},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Setter.purs","start":{"column":1,"line":68}}}]]]