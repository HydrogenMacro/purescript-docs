// This file was generated by docs-search.
window.DocsSearchIndex["32"] = [["yoneda",[{"comments":"The Yoneda `Functor`\n\n`Yoneda f` is a `Functor` for any type constructor `f`.\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[{"name":"f"},{"name":"a"}]}},"moduleName":"Data.Yoneda","name":"Yoneda","packageInfo":{"tag":"package","value":"free"},"score":1,"sourceSpan":{"end":{"column":56,"line":21},"name":".spago\\p\\free-7.1.0\\src\\Data\\Yoneda.purs","start":{"column":1,"line":21}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},"skolem":null}}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}}},"moduleName":"Data.Yoneda","name":"Yoneda","packageInfo":{"tag":"package","value":"free"},"score":1,"sourceSpan":{"end":{"column":56,"line":21},"name":".spago\\p\\free-7.1.0\\src\\Data\\Yoneda.purs","start":{"column":20,"line":21}}}]],["use",[{"comments":"View the focus of a `Getter` in the state of a monad.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"s","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"s"},{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Getter"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Lens.Getter","name":"use","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":65,"line":50},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Getter.purs","start":{"column":1,"line":50}}}]],["usecredentials",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLImageElement","CORSMode"],"CORSMode"]}}},"moduleName":"Web.HTML.HTMLImageElement.CORSMode","name":"UseCredentials","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":19,"line":12},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLImageElement\\CORSMode.purs","start":{"column":3,"line":12}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeConstructor","annotation":null,"contents":[["DOM","HTML","Indexed","CrossOriginValue"],"CrossOriginValue"]}}},"moduleName":"DOM.HTML.Indexed.CrossOriginValue","name":"UseCredentials","packageInfo":{"tag":"package","value":"dom-indexed"},"score":1,"sourceSpan":{"end":{"column":19,"line":7},"name":".spago\\p\\dom-indexed-13.0.0\\src\\DOM\\HTML\\Indexed\\CrossOriginValue.purs","start":{"column":3,"line":7}}}]],["usemap",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLObjectElement"],"HTMLObjectElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Web.HTML.HTMLObjectElement","name":"useMap","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":60,"line":109},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLObjectElement.purs","start":{"column":1,"line":109}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLImageElement"],"HTMLImageElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Web.HTML.HTMLImageElement","name":"useMap","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":59,"line":141},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLImageElement.purs","start":{"column":1,"line":141}}}]],["useragent",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","Navigator"],"Navigator"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Web.HTML.Navigator","name":"userAgent","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":55,"line":15},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\Navigator.purs","start":{"column":1,"line":15}}}]],["username",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLHyperlinkElementUtils"],"HTMLHyperlinkElementUtils"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Web.HTML.HTMLHyperlinkElementUtils","name":"username","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":70,"line":17},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLHyperlinkElementUtils.purs","start":{"column":1,"line":17}}}]],["tt",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},"skolem":null}},"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"typeClassArguments":[{"name":"a"}]}},"moduleName":"Data.HeytingAlgebra","name":"tt","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":10,"line":54},"name":".spago\\p\\prelude-6.0.2\\src\\Data\\HeytingAlgebra.purs","start":{"column":3,"line":54}}}]],["ttrecord",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"rowlist","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"row","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"subrow","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"rowlist"},{"tag":"TypeVar","annotation":null,"contents":"row"},{"tag":"TypeVar","annotation":null,"contents":"subrow"}],"constraintClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","annotation":null,"contents":"rowlist"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","annotation":null,"contents":"row"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"TypeVar","annotation":null,"contents":"subrow"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","HeytingAlgebra"],"HeytingAlgebraRecord"],"typeClassArguments":[{"name":"rowlist"},{"name":"row"},{"name":"subrow"}]}},"moduleName":"Data.HeytingAlgebra","name":"ttRecord","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":58,"line":112},"name":".spago\\p\\prelude-6.0.2\\src\\Data\\HeytingAlgebra.purs","start":{"column":3,"line":112}}}]],["sub",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","annotation":null,"contents":[["DOM","HTML","Indexed"],"HTMLsub"]}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"sub","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":38,"line":799},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":799}}},{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ring"],"Ring"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"typeClass":[["Data","Ring"],"Ring"],"typeClassArguments":[{"name":"a"}]}},"moduleName":"Data.Ring","name":"sub","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":21,"line":28},"name":".spago\\p\\prelude-6.0.2\\src\\Data\\Ring.purs","start":{"column":3,"line":28}}}]],["sub_",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"sub_","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":49,"line":802},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":802}}}]],["submap",[{"comments":"Returns a new map containing all entries of the given map which lie\nbetween a given lower and upper bound, treating `Nothing` as no bound i.e.\nincluding the smallest (or largest) key in the map, no matter how small\n(or large) it is. For example:\n\n```purescript\nsubmap (Just 1) (Just 2)\n  (fromFoldable [Tuple 0 \"zero\", Tuple 1 \"one\", Tuple 2 \"two\", Tuple 3 \"three\"])\n  == fromFoldable [Tuple 1 \"one\", Tuple 2 \"two\"]\n\nsubmap Nothing (Just 2)\n  (fromFoldable [Tuple 0 \"zero\", Tuple 1 \"one\", Tuple 2 \"two\", Tuple 3 \"three\"])\n  == fromFoldable [Tuple 0 \"zero\", Tuple 1 \"one\", Tuple 2 \"two\"]\n```\n\nThe function is entirely specified by the following\nproperty:\n\n```purescript\nGiven any m :: Map k v, mmin :: Maybe k, mmax :: Maybe k, key :: k,\n  let m' = submap mmin mmax m in\n    if (maybe true (\\min -> min <= key) mmin &&\n        maybe true (\\max -> max >= key) mmax)\n      then lookup key m == lookup key m'\n      else not (member key m')\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"k","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"v","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"k"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Map.Internal","name":"submap","packageInfo":{"tag":"package","value":"ordered-collections"},"score":5,"sourceSpan":{"end":{"column":72,"line":449},"name":".spago\\p\\ordered-collections-3.2.0\\src\\Data\\Map\\Internal.purs","start":{"column":1,"line":449}}}]],["submit",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLFormElement"],"HTMLFormElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}},"moduleName":"Web.HTML.HTMLFormElement","name":"submit","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":56,"line":90},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLFormElement.purs","start":{"column":1,"line":90}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Web","Event","Event"],"EventType"]}},"moduleName":"Web.HTML.Event.EventTypes","name":"submit","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":20,"line":95},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\Event\\EventTypes.purs","start":{"column":1,"line":95}}}]],["submodifying",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"s","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"s"},{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Monad","State","Class"],"MonadState"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ring"],"Ring"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Setter'"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Lens.Setter","name":"subModifying","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":85,"line":128},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Setter.purs","start":{"column":1,"line":128}}}]],["subover",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"s","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ring"],"Ring"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Setter"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Lens.Setter","name":"subOver","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":65,"line":94},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Setter.purs","start":{"column":1,"line":94}}}]],["subrecord",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"rowlist","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"row","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"subrow","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"rowlist"},{"tag":"TypeVar","annotation":null,"contents":"row"},{"tag":"TypeVar","annotation":null,"contents":"subrow"}],"constraintClass":[["Data","Ring"],"RingRecord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","annotation":null,"contents":"rowlist"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"TypeVar","annotation":null,"contents":"row"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"TypeVar","annotation":null,"contents":"row"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"TypeVar","annotation":null,"contents":"subrow"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","Ring"],"RingRecord"],"typeClassArguments":[{"name":"rowlist"},{"name":"row"},{"name":"subrow"}]}},"moduleName":"Data.Ring","name":"subRecord","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":74,"line":61},"name":".spago\\p\\prelude-6.0.2\\src\\Data\\Ring.purs","start":{"column":3,"line":61}}}]],["subscribe",[{"comments":"Subscribe to an `Emitter` by providing a callback to run on values produced\nby the emitter:\n\n```purs\n-- Produce an emitter / listener pair with `create`:\n{ emitter, listener } <- create\n\n-- Then, subscribe to the emitter by providing a callback:\nsubscription <- subscribe emitter \\emitted ->\n  doSomethingWith emitted\n\n-- End the subscription at any time with `unsubscribe`:\nunsubscribe subscription\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"r","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Subscription"],"Emitter"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Subscription"],"Subscription"]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.Subscription","name":"subscribe","packageInfo":{"tag":"package","value":"halogen-subscriptions"},"score":1,"sourceSpan":{"end":{"column":25,"line":167},"name":".spago\\p\\halogen-subscriptions-2.0.0\\src\\Halogen\\Subscription.purs","start":{"column":1,"line":163}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"SubscriptionId"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Subscription"],"Emitter"]},{"tag":"TypeVar","annotation":null,"contents":"action"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"SubscriptionId"]}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"HalogenF"]},{"tag":"TypeVar","annotation":null,"contents":"state"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"output"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]}}},"moduleName":"Halogen.Query.HalogenM","name":"Subscribe","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":14,"line":45},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\HalogenM.purs","start":{"column":3,"line":45}}},{"comments":"Subscribes a component to an `Emitter`.\n\nWhen a component is disposed of any active subscriptions will automatically\nbe stopped and no further subscriptions will be possible during\nfinalization.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"state","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"action","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slots","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Subscription"],"Emitter"]},{"tag":"TypeVar","annotation":null,"contents":"action"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"HalogenM"]},{"tag":"TypeVar","annotation":null,"contents":"state"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"output"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"SubscriptionId"]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.Query.HalogenM","name":"subscribe","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":122,"line":174},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\HalogenM.purs","start":{"column":1,"line":174}}}]],["subscribe'",[{"comments":"An alternative to `subscribe`, intended for subscriptions that unsubscribe\nthemselves. Instead of returning the `SubscriptionId` from `subscribe'`, it\nis passed into an `Emitter` constructor. This allows emitted queries\nto include the `SubscriptionId`, rather than storing it in the state of the\ncomponent.\n\nWhen a component is disposed of any active subscriptions will automatically\nbe stopped and no further subscriptions will be possible during\nfinalization.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"state","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"action","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slots","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"SubscriptionId"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Subscription"],"Emitter"]},{"tag":"TypeVar","annotation":null,"contents":"action"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"HalogenM"]},{"tag":"TypeVar","annotation":null,"contents":"state"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"output"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.Query.HalogenM","name":"subscribe'","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":133,"line":186},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\HalogenM.purs","start":{"column":1,"line":186}}}]],["subscribeio",[{"comments":"A paired `Listener` and `Emitter` produced with the `create` function.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Record"]},{"tag":"RCons","annotation":null,"contents":["\u0000l\u0000i\u0000s\u0000t\u0000e\u0000n\u0000e\u0000r",{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Subscription"],"Listener"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"RCons","annotation":null,"contents":["\u0000e\u0000m\u0000i\u0000t\u0000t\u0000e\u0000r",{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Subscription"],"Emitter"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"REmpty","annotation":null}]}]}]}}},"moduleName":"Halogen.Subscription","name":"SubscribeIO","packageInfo":{"tag":"package","value":"halogen-subscriptions"},"score":1,"sourceSpan":{"end":{"column":4,"line":36},"name":".spago\\p\\halogen-subscriptions-2.0.0\\src\\Halogen\\Subscription.purs","start":{"column":1,"line":33}}}]],["subscription",[{"comments":"A `Subscription` results from subscribing to an `Emitter` with `subscribe`;\nthe subscription can be ended at any time with `unsubscribe`.\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[]}},"moduleName":"Halogen.Subscription","name":"Subscription","packageInfo":{"tag":"package","value":"halogen-subscriptions"},"score":1,"sourceSpan":{"end":{"column":50,"line":144},"name":".spago\\p\\halogen-subscriptions-2.0.0\\src\\Halogen\\Subscription.purs","start":{"column":1,"line":144}}}]],["subscriptionid",[{"comments":"The ID value associated with a subscription. Allows the subscription to be\nstopped at a later time.\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[]}},"moduleName":"Halogen.Query.HalogenM","name":"SubscriptionId","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":44,"line":164},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\HalogenM.purs","start":{"column":1,"line":164}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"SubscriptionId"]}]}}},"moduleName":"Halogen.Query.HalogenM","name":"SubscriptionId","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":44,"line":164},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\HalogenM.purs","start":{"column":24,"line":164}}}]],["subset",[{"comments":"True if and only if every element in the first set is an element of the\nsecond set.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Set","NonEmpty"],"NonEmptySet"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}]},"skolem":null}}},"moduleName":"Data.Set.NonEmpty","name":"subset","packageInfo":{"tag":"package","value":"ordered-collections"},"score":5,"sourceSpan":{"end":{"column":71,"line":142},"name":".spago\\p\\ordered-collections-3.2.0\\src\\Data\\Set\\NonEmpty.purs","start":{"column":1,"line":142}}},{"comments":"True if and only if every element in the first set\nis an element of the second set\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}]},"skolem":null}}},"moduleName":"Data.Set","name":"subset","packageInfo":{"tag":"package","value":"ordered-collections"},"score":5,"sourceSpan":{"end":{"column":55,"line":155},"name":".spago\\p\\ordered-collections-3.2.0\\src\\Data\\Set.purs","start":{"column":1,"line":155}}}]],["substfree",[{"comments":"Like `foldFree`, but for folding into some other Free monad without the\noverhead that `MonadRec` incurs.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"g","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","annotation":null,"contents":"g"}]}]}}]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","annotation":null,"contents":"g"}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Control.Monad.Free","name":"substFree","packageInfo":{"tag":"package","value":"free"},"score":1,"sourceSpan":{"end":{"column":59,"line":164},"name":".spago\\p\\free-7.1.0\\src\\Control\\Monad\\Free.purs","start":{"column":1,"line":164}}}]],["substringdata",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","CharacterData"],"CharacterData"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}]}]}},"moduleName":"Web.DOM.CharacterData","name":"substringData","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":77,"line":44},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\CharacterData.purs","start":{"column":1,"line":44}}}]],["succ",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Enum"],"Enum"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"typeClass":[["Data","Enum"],"Enum"],"typeClassArguments":[{"name":"a"}]}},"moduleName":"Data.Enum","name":"succ","packageInfo":{"tag":"package","value":"enums"},"score":3,"sourceSpan":{"end":{"column":23,"line":51},"name":".spago\\p\\enums-6.0.1\\src\\Data\\Enum.purs","start":{"column":3,"line":51}}}]],["suchthat",[{"comments":"Creates a generator that repeatedly run another generator until its output\nmatches a given predicate. This will never halt if the predicate always\nfails.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Monad","Gen","Class"],"MonadGen"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Control.Monad.Gen","name":"suchThat","packageInfo":{"tag":"package","value":"gen"},"score":7,"sourceSpan":{"end":{"column":81,"line":109},"name":".spago\\p\\gen-4.0.0\\src\\Control\\Monad\\Gen.purs","start":{"column":1,"line":109}}}]],["sum",[{"comments":"A representation for types with multiple constructors.\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"a"},{"name":"b"}]}},"moduleName":"Data.Generic.Rep","name":"Sum","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":29,"line":30},"name":".spago\\p\\prelude-6.0.2\\src\\Data\\Generic\\Rep.purs","start":{"column":1,"line":30}}},{"comments":"Find the sum of the numeric values in a data structure.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Semiring"],"Semiring"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Foldable","name":"sum","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":56,"line":378},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Foldable.purs","start":{"column":1,"line":378}}}]],["summary",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","annotation":null,"contents":[["DOM","HTML","Indexed"],"HTMLsummary"]}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"summary","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":46,"line":805},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":805}}}]],["summary_",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"summary_","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":53,"line":808},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":808}}}]],["sumof",[{"comments":"The sum of all foci of a `Fold`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"s","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Semiring"],"Semiring"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Monoid","Additive"],"Additive"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Lens.Fold","name":"sumOf","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":75,"line":124},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Fold.purs","start":{"column":1,"line":124}}}]],["sunday",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Date","Component"],"Weekday"]}}},"moduleName":"Data.Date.Component","name":"Sunday","packageInfo":{"tag":"package","value":"datetime"},"score":4,"sourceSpan":{"end":{"column":11,"line":151},"name":".spago\\p\\datetime-6.1.0\\src\\Data\\Date\\Component.purs","start":{"column":3,"line":151}}}]],["sup",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","annotation":null,"contents":[["DOM","HTML","Indexed"],"HTMLsup"]}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"sup","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":38,"line":811},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":811}}}]],["sup_",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"sup_","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":49,"line":814},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":814}}}]],["supervise",[{"comments":"Creates a new supervision context for some `Aff`, guaranteeing fiber\ncleanup when the parent completes. Any pending fibers forked within\nthe context will be killed and have their cancelers run.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},"skolem":null}}},"moduleName":"Effect.Aff","name":"supervise","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":38,"line":324},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff.purs","start":{"column":1,"line":324}}}]],["surround",[{"comments":"`fold` but with each element surrounded by some fixed value.\n\nFor example:\n\n```purescript\n> surround \"*\" []\n= \"*\"\n\n> surround \"*\" [\"1\"]\n= \"*1*\"\n\n> surround \"*\" [\"1\", \"2\"]\n= \"*1*2*\"\n\n> surround \"*\" [\"1\", \"2\", \"3\"]\n= \"*1*2*3*\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"m"}]}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Foldable","name":"surround","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":67,"line":352},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Foldable.purs","start":{"column":1,"line":352}}}]],["surroundmap",[{"comments":"`foldMap` but with each element surrounded by some fixed value.\n\nFor example:\n\n```purescript\n> surroundMap \"*\" show []\n= \"*\"\n\n> surroundMap \"*\" show [1]\n= \"*1*\"\n\n> surroundMap \"*\" show [1, 2]\n= \"*1*2*\"\n\n> surroundMap \"*\" show [1, 2, 3]\n= \"*1*2*3*\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Foldable","name":"surroundMap","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":84,"line":331},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Foldable.purs","start":{"column":1,"line":331}}}]],["surroundmapwithindex",[{"comments":"`foldMapWithIndex` but with each element surrounded by some fixed value.\n\nFor example:\n\n```purescript\n> surroundMapWithIndex \"*\" (\\i x -> show i <> x) []\n= \"*\"\n\n> surroundMapWithIndex \"*\" (\\i x -> show i <> x) [\"a\"]\n= \"*0a*\"\n\n> surroundMapWithIndex \"*\" (\\i x -> show i <> x) [\"a\", \"b\"]\n= \"*0a*1b*\"\n\n> surroundMapWithIndex \"*\" (\\i x -> show i <> x) [\"a\", \"b\", \"c\"]\n= \"*0a*1b*2c*\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"i"},{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","FoldableWithIndex"],"FoldableWithIndex"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Data","Semigroup"],"Semigroup"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.FoldableWithIndex","name":"surroundMapWithIndex","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":7,"line":288},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\FoldableWithIndex.purs","start":{"column":1,"line":281}}}]],["suspend",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Monad","Fork","Class"],"MonadFork"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Control","Monad","Fork","Class"],"MonadFork"],"typeClassArguments":[{"name":"f"},{"name":"m"}]}},"moduleName":"Control.Monad.Fork.Class","name":"suspend","packageInfo":{"tag":"package","value":"fork"},"score":1,"sourceSpan":{"end":{"column":38,"line":28},"name":".spago\\p\\fork-6.0.0\\src\\Control\\Monad\\Fork\\Class.purs","start":{"column":3,"line":28}}}]],["suspendaff",[{"comments":"Suspends an `Aff` from within a parent `Aff` context, returning the `Fiber`.\nA suspended `Aff` is not executed until a consumer observes the result\nwith `joinFiber`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Fiber"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}}},"moduleName":"Effect.Aff","name":"suspendAff","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":47,"line":263},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff.purs","start":{"column":1,"line":263}}}]],["suspendf",[{"comments":"Suspend a value given the applicative functor `f` into the free monad.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]}]}]},"skolem":null}}},"moduleName":"Control.Monad.Free","name":"suspendF","packageInfo":{"tag":"package","value":"free"},"score":1,"sourceSpan":{"end":{"column":56,"line":143},"name":".spago\\p\\free-7.1.0\\src\\Control\\Monad\\Free.purs","start":{"column":1,"line":143}}}]],[":|",[{"comments":"An infix synonym for `NonEmpty`.\n\n```purescript\nnonEmptyArray :: NonEmpty Array Int\nnonEmptyArray = 1 :| [2,3]\n\nnonEmptyList :: NonEmpty List Int\nnonEmptyList = 1 :| 2 : 3 : Nil\n```\n","hashAnchor":"v","info":{"tag":"valueAlias"},"moduleName":"Data.NonEmpty","name":"(:|)","packageInfo":{"tag":"package","value":"nonempty"},"score":7,"sourceSpan":{"end":{"column":24,"line":57},"name":".spago\\p\\nonempty-7.0.0\\src\\Data\\NonEmpty.purs","start":{"column":1,"line":57}}}]]]