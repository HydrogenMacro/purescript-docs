// This file was generated by docs-search.
window.DocsSearchIndex["17"] = [["wbr",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Elements"],"Leaf"]},{"tag":"TypeConstructor","annotation":null,"contents":[["DOM","HTML","Indexed"],"HTMLwbr"]}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"wbr","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":38,"line":901},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":901}}}]],["u",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","annotation":null,"contents":[["DOM","HTML","Indexed"],"HTMLu"]}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"u","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":34,"line":877},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":877}}}]],["tee",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"chunk","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Web","Streams","ReadableStream"],"ReadableStream"]},{"tag":"TypeVar","annotation":null,"contents":"chunk"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Tuple"],"Tuple"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Web","Streams","ReadableStream"],"ReadableStream"]},{"tag":"TypeVar","annotation":null,"contents":"chunk"}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Web","Streams","ReadableStream"],"ReadableStream"]},{"tag":"TypeVar","annotation":null,"contents":"chunk"}]}}]}}]}]},"skolem":null}}},"moduleName":"Web.Streams.ReadableStream","name":"tee","packageInfo":{"tag":"package","value":"web-streams"},"score":2,"sourceSpan":{"end":{"column":106,"line":36},"name":".spago\\p\\web-streams-4.0.0\\src\\Web\\Streams\\ReadableStream.purs","start":{"column":1,"line":36}}}]],["tell",[{"comments":"Type synonym for a \"tell-style\" query - queries that only cause effects,\nbut that cannot receive a return value.\n\nIn a query algebra, a tell constructor carries the algebra's type variable\nas its last argument. For example:\n\n``` purescript\ndata Query a\n  = SomeTell a\n  | SomeOtherTell String a\n  | NotATell (Boolean -> a)\n```\n\nBoth `SomeTell` and `SomeOtherTell` carry a plain `a` as a value, whereas\n`NotATell` has `a` as the result of a function so is considered to be a\n\"request\" ([see below](#Request)).\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"f"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}}},"moduleName":"Halogen.Query","name":"Tell","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":29,"line":53},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query.purs","start":{"column":1,"line":53}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"state","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"action","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"label","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slots","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"query","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output'","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slot","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"_1","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"label"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Data","Slot"],"Slot"]},{"tag":"TypeVar","annotation":null,"contents":"query"}]},{"tag":"TypeVar","annotation":null,"contents":"output'"}]},{"tag":"TypeVar","annotation":null,"contents":"slot"}]}},{"tag":"TypeVar","annotation":null,"contents":"_1"},{"tag":"TypeVar","annotation":null,"contents":"slots"}],"constraintClass":[["Prim","Row"],"Cons"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"label"}],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"slot"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","annotation":null,"contents":"label"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"slot"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query"],"Tell"]},{"tag":"TypeVar","annotation":null,"contents":"query"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"HalogenM"]},{"tag":"TypeVar","annotation":null,"contents":"state"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"output"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.Query","name":"tell","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":47,"line":76},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query.purs","start":{"column":1,"line":68}}},{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Monad","Writer","Class"],"MonadTell"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]},"skolem":null}},"skolem":null}},"typeClass":[["Control","Monad","Writer","Class"],"MonadTell"],"typeClassArguments":[{"name":"w"},{"name":"m"}]}},"moduleName":"Control.Monad.Writer.Class","name":"tell","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":22,"line":20},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Monad\\Writer\\Class.purs","start":{"column":3,"line":20}}}]],["tellall",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"state","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"action","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"label","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slots","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"query","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output'","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slot","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"_1","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"label"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Data","Slot"],"Slot"]},{"tag":"TypeVar","annotation":null,"contents":"query"}]},{"tag":"TypeVar","annotation":null,"contents":"output'"}]},{"tag":"TypeVar","annotation":null,"contents":"slot"}]}},{"tag":"TypeVar","annotation":null,"contents":"_1"},{"tag":"TypeVar","annotation":null,"contents":"slots"}],"constraintClass":[["Prim","Row"],"Cons"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"label"}],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"slot"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","annotation":null,"contents":"label"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query"],"Tell"]},{"tag":"TypeVar","annotation":null,"contents":"query"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"HalogenM"]},{"tag":"TypeVar","annotation":null,"contents":"state"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"output"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.Query","name":"tellAll","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":47,"line":86},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query.purs","start":{"column":1,"line":79}}}]],["test",[{"comments":"Returns `true` if the `Regex` matches the string. In contrast to\n`RegExp.prototype.test()` in JavaScript, `test` does not affect\nthe `lastIndex` property of the Regex.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","Regex"],"Regex"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}},"moduleName":"Data.String.Regex","name":"test","packageInfo":{"tag":"package","value":"strings"},"score":4,"sourceSpan":{"end":{"column":50,"line":82},"name":".spago\\p\\strings-6.0.1\\src\\Data\\String\\Regex.purs","start":{"column":1,"line":82}}}]],["text",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLTitleElement"],"HTMLTitleElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Web.HTML.HTMLTitleElement","name":"text","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":57,"line":57},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLTitleElement.purs","start":{"column":1,"line":57}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLScriptElement"],"HTMLScriptElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Web.HTML.HTMLScriptElement","name":"text","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":58,"line":74},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLScriptElement.purs","start":{"column":1,"line":74}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLOptionElement"],"HTMLOptionElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Web.HTML.HTMLOptionElement","name":"text","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":58,"line":111},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLOptionElement.purs","start":{"column":1,"line":111}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLAnchorElement"],"HTMLAnchorElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Web.HTML.HTMLAnchorElement","name":"text","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":58,"line":81},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLAnchorElement.purs","start":{"column":1,"line":81}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","Event","DataTransfer","DataTransferItem"],"DataTransferItemKind"]}}},"moduleName":"Web.HTML.Event.DataTransfer.DataTransferItem","name":"Text","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":33,"line":19},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\Event\\DataTransfer\\DataTransferItem.purs","start":{"column":27,"line":19}}},{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[]}},"moduleName":"Web.DOM.Text","name":"Text","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":33,"line":13},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\Text.purs","start":{"column":1,"line":13}}},{"comments":"The Text type constructor makes a Doc from a Symbol\nto be used in a custom type error.\n\nFor more information, see\n[the Custom Type Errors guide](https://github.com/purescript/documentation/blob/master/guides/Custom-Type-Errors.md).\n","hashAnchor":"t","info":{"tag":"externData","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Symbol"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim","TypeError"],"Doc"]}]}},"moduleName":"Prim.TypeError","name":"Text","packageInfo":{"tag":"builtin"},"score":0},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["JS","Fetch","Response"],"Response"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Promise","Internal"],"Promise"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}}]}]}},"moduleName":"JS.Fetch.Response","name":"text","packageInfo":{"tag":"package","value":"js-fetch"},"score":1,"sourceSpan":{"end":{"column":59,"line":44},"name":".spago\\p\\js-fetch-0.2.1\\src\\JS\\Fetch\\Response.purs","start":{"column":1,"line":44}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","VDom","Types"],"VDom"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]}]}}},"moduleName":"Halogen.VDom.Types","name":"Text","packageInfo":{"tag":"package","value":"halogen-vdom"},"score":1,"sourceSpan":{"end":{"column":9,"line":27},"name":".spago\\p\\halogen-vdom-8.0.0\\src\\Halogen\\VDom\\Types.purs","start":{"column":3,"line":27}}},{"comments":"Constructs a text node `HTML` value.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Core","name":"text","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":39,"line":68},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Core.purs","start":{"column":1,"line":68}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["JS","Fetch","Response"],"Response"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Fetch.Internal.Response","name":"text","packageInfo":{"tag":"package","value":"fetch"},"score":0,"sourceSpan":{"end":{"column":44,"line":44},"name":".spago\\p\\fetch-4.1.0\\src\\Fetch\\Internal\\Response.purs","start":{"column":1,"line":44}}}]],["textarea",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Elements"],"Leaf"]},{"tag":"TypeConstructor","annotation":null,"contents":[["DOM","HTML","Indexed"],"HTMLtextarea"]}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"textarea","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":48,"line":835},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":835}}}]],["textcontent",[{"comments":"If the node type is document fragment, element, text, processing\ninstruction, or comment this is the node's data, or null in all other\ncases.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Web.DOM.Node","name":"textContent","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":52,"line":138},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\Node.purs","start":{"column":1,"line":138}}}]],["textcss",[{"comments":"The `text/css` media type.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","MediaType"],"MediaType"]}},"moduleName":"Data.MediaType.Common","name":"textCSS","packageInfo":{"tag":"package","value":"media-types"},"score":3,"sourceSpan":{"end":{"column":21,"line":58},"name":".spago\\p\\media-types-6.0.0\\src\\Data\\MediaType\\Common.purs","start":{"column":1,"line":58}}}]],["textcsv",[{"comments":"The `text/csv` media type.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","MediaType"],"MediaType"]}},"moduleName":"Data.MediaType.Common","name":"textCSV","packageInfo":{"tag":"package","value":"media-types"},"score":3,"sourceSpan":{"end":{"column":21,"line":42},"name":".spago\\p\\media-types-6.0.0\\src\\Data\\MediaType\\Common.purs","start":{"column":1,"line":42}}}]],["texthtml",[{"comments":"The `text/html` media type.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","MediaType"],"MediaType"]}},"moduleName":"Data.MediaType.Common","name":"textHTML","packageInfo":{"tag":"package","value":"media-types"},"score":3,"sourceSpan":{"end":{"column":22,"line":46},"name":".spago\\p\\media-types-6.0.0\\src\\Data\\MediaType\\Common.purs","start":{"column":1,"line":46}}}]],["textlength",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLTextAreaElement"],"HTMLTextAreaElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}]}},"moduleName":"Web.HTML.HTMLTextAreaElement","name":"textLength","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":63,"line":182},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLTextAreaElement.purs","start":{"column":1,"line":182}}}]],["textnode",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","NodeType"],"NodeType"]}}},"moduleName":"Web.DOM.NodeType","name":"TextNode","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":13,"line":10},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\NodeType.purs","start":{"column":3,"line":10}}}]],["textplain",[{"comments":"The `text/plain` media type.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","MediaType"],"MediaType"]}},"moduleName":"Data.MediaType.Common","name":"textPlain","packageInfo":{"tag":"package","value":"media-types"},"score":3,"sourceSpan":{"end":{"column":23,"line":50},"name":".spago\\p\\media-types-6.0.0\\src\\Data\\MediaType\\Common.purs","start":{"column":1,"line":50}}}]],["textxml",[{"comments":"The `text/xml` media type.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","MediaType"],"MediaType"]}},"moduleName":"Data.MediaType.Common","name":"textXML","packageInfo":{"tag":"package","value":"media-types"},"score":3,"sourceSpan":{"end":{"column":21,"line":54},"name":".spago\\p\\media-types-6.0.0\\src\\Data\\MediaType\\Common.purs","start":{"column":1,"line":54}}}]],["t3",[{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"},{"name":"b"},{"name":"z"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Tuple","Nested"],"T2"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"z"}]}}]}}},"moduleName":"Data.Tuple.Nested","name":"T3","packageInfo":{"tag":"package","value":"tuples"},"score":23,"sourceSpan":{"end":{"column":33,"line":86},"name":".spago\\p\\tuples-7.0.0\\src\\Data\\Tuple\\Nested.purs","start":{"column":1,"line":86}}},{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"},{"name":"b"},{"name":"z"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Product","Nested"],"T2"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"z"}]}}]}}},"moduleName":"Data.Functor.Product.Nested","name":"T3","packageInfo":{"tag":"package","value":"functors"},"score":4,"sourceSpan":{"end":{"column":35,"line":33},"name":".spago\\p\\functors-5.0.0\\src\\Data\\Functor\\Product\\Nested.purs","start":{"column":1,"line":33}}}]],["pi",[{"comments":"The ratio of the circumference of a circle to its diameter.\n```purs\n> pi\n3.141592653589793\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}},"moduleName":"Data.Number","name":"pi","packageInfo":{"tag":"package","value":"numbers"},"score":2,"sourceSpan":{"end":{"column":13,"line":329},"name":".spago\\p\\numbers-9.0.1\\src\\Data\\Number.purs","start":{"column":1,"line":329}}}]],["pixel",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeConstructor","annotation":null,"contents":[["Web","UIEvent","WheelEvent"],"DeltaMode"]}}},"moduleName":"Web.UIEvent.WheelEvent","name":"Pixel","packageInfo":{"tag":"package","value":"web-uievents"},"score":3,"sourceSpan":{"end":{"column":10,"line":61},"name":".spago\\p\\web-uievents-5.0.0\\src\\Web\\UIEvent\\WheelEvent.purs","start":{"column":3,"line":61}}}]],["lmap",[{"comments":"Map a function over the first type argument of a `Bifunctor`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Bifunctor"],"Bifunctor"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bifunctor","name":"lmap","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":66,"line":27},"name":".spago\\p\\bifunctors-6.1.0\\src\\Data\\Bifunctor.purs","start":{"column":1,"line":27}}}]],["join",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"ForkId"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"HalogenF"]},{"tag":"TypeVar","annotation":null,"contents":"state"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"output"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]}}},"moduleName":"Halogen.Query.HalogenM","name":"Join","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":9,"line":52},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\HalogenM.purs","start":{"column":3,"line":52}}},{"comments":"Joins a forked process. Attempting to join a forked process that has\nalready ended will result in eval continuing immediately. Attempting\nto join a forked process that has been killed will also terminate the\ncurrent eval.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"state","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"action","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slots","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"ForkId"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"HalogenM"]},{"tag":"TypeVar","annotation":null,"contents":"state"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"output"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.Query.HalogenM","name":"join","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":96,"line":224},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\HalogenM.purs","start":{"column":1,"line":224}}},{"comments":"Turns a `Profunctor` into a `Invariant` functor by equating the two type\narguments.\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[{"name":"p"},{"name":"a"}]}},"moduleName":"Data.Profunctor.Join","name":"Join","packageInfo":{"tag":"package","value":"profunctor"},"score":4,"sourceSpan":{"end":{"column":32,"line":12},"name":".spago\\p\\profunctor-6.0.1\\src\\Data\\Profunctor\\Join.purs","start":{"column":1,"line":12}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"p"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Profunctor","Join"],"Join"]},{"tag":"TypeVar","annotation":null,"contents":"p"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}}},"moduleName":"Data.Profunctor.Join","name":"Join","packageInfo":{"tag":"package","value":"profunctor"},"score":4,"sourceSpan":{"end":{"column":32,"line":12},"name":".spago\\p\\profunctor-6.0.1\\src\\Data\\Profunctor\\Join.purs","start":{"column":18,"line":12}}},{"comments":"Turns a `Bifunctor` into a `Functor` by equating the two type arguments.\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[{"name":"p"},{"name":"a"}]}},"moduleName":"Data.Bifunctor.Join","name":"Join","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":32,"line":13},"name":".spago\\p\\bifunctors-6.1.0\\src\\Data\\Bifunctor\\Join.purs","start":{"column":1,"line":13}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"p"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Bifunctor","Join"],"Join"]},{"tag":"TypeVar","annotation":null,"contents":"p"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}}},"moduleName":"Data.Bifunctor.Join","name":"Join","packageInfo":{"tag":"package","value":"bifunctors"},"score":10,"sourceSpan":{"end":{"column":32,"line":13},"name":".spago\\p\\bifunctors-6.1.0\\src\\Data\\Bifunctor\\Join.purs","start":{"column":18,"line":13}}},{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Monad","Fork","Class"],"MonadFork"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Control","Monad","Fork","Class"],"MonadFork"],"typeClassArguments":[{"name":"f"},{"name":"m"}]}},"moduleName":"Control.Monad.Fork.Class","name":"join","packageInfo":{"tag":"package","value":"fork"},"score":1,"sourceSpan":{"end":{"column":31,"line":30},"name":".spago\\p\\fork-6.0.0\\src\\Control\\Monad\\Fork\\Class.purs","start":{"column":3,"line":30}}},{"comments":"Collapse two applications of a monadic type constructor into one.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Bind"],"Bind"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Control.Bind","name":"join","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":45,"line":117},"name":".spago\\p\\prelude-6.0.2\\src\\Control\\Bind.purs","start":{"column":1,"line":117}}}]],["join1with",[{"comments":"Joins non-empty strings in a non-empty container together as a new\nnon-empty string, inserting a possibly empty string as separator between\nthem. The result is guaranteed to be non-empty.\n\n```purescript\n-- array syntax is used for demonstration here, it would need to be a real `Foldable1`\njoin1With \", \" [NonEmptyString \"apple\", NonEmptyString \"banana\"] == NonEmptyString \"apple, banana\"\njoin1With \"\" [NonEmptyString \"apple\", NonEmptyString \"banana\"] == NonEmptyString \"applebanana\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}]},"skolem":null}}},"moduleName":"Data.String.NonEmpty.Internal","name":"join1With","packageInfo":{"tag":"package","value":"strings"},"score":4,"sourceSpan":{"end":{"column":83,"line":216},"name":".spago\\p\\strings-6.0.1\\src\\Data\\String\\NonEmpty\\Internal.purs","start":{"column":1,"line":216}}}]],["joinfiber",[{"comments":"Blocks until the fiber completes, yielding the result. If the fiber\nthrows an exception, it is rethrown in the current fiber.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Fiber"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]}]}},"moduleName":"Effect.Aff","name":"joinFiber","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":26,"line":196},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff.purs","start":{"column":1,"line":196}}}]],["joinwith",[{"comments":"Joins the strings in a container together as a new string, inserting the\nfirst argument as separator between them. The result is not guaranteed to\nbe non-empty.\n\n```purescript\njoinWith \", \" [NonEmptyString \"apple\", NonEmptyString \"banana\"] == \"apple, banana\"\njoinWith \", \" [] == \"\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}]},"skolem":null}}},"moduleName":"Data.String.NonEmpty.Internal","name":"joinWith","packageInfo":{"tag":"package","value":"strings"},"score":4,"sourceSpan":{"end":{"column":73,"line":201},"name":".spago\\p\\strings-6.0.1\\src\\Data\\String\\NonEmpty\\Internal.purs","start":{"column":1,"line":201}}},{"comments":"Joins the strings in the array together, inserting the first argument\nas separator between them.\n\n```purescript\njoinWith \", \" [\"apple\", \"banana\", \"orange\"] == \"apple, banana, orange\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]}},"moduleName":"Data.String.Common","name":"joinWith","packageInfo":{"tag":"package","value":"strings"},"score":4,"sourceSpan":{"end":{"column":60,"line":96},"name":".spago\\p\\strings-6.0.1\\src\\Data\\String\\Common.purs","start":{"column":1,"line":96}}}]],["joinwith1",[{"comments":"Joins possibly empty strings in a non-empty container together as a new\nnon-empty string, inserting a non-empty string as a separator between them.\nThe result is guaranteed to be non-empty.\n\n```purescript\n-- array syntax is used for demonstration here, it would need to be a real `Foldable1`\njoinWith1 (NonEmptyString \", \") [\"apple\", \"banana\"] == NonEmptyString \"apple, banana\"\njoinWith1 (NonEmptyString \"/\") [\"a\", \"b\", \"\", \"c\", \"\"] == NonEmptyString \"a/b//c/\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}]},"skolem":null}}},"moduleName":"Data.String.NonEmpty.Internal","name":"joinWith1","packageInfo":{"tag":"package","value":"strings"},"score":4,"sourceSpan":{"end":{"column":83,"line":228},"name":".spago\\p\\strings-6.0.1\\src\\Data\\String\\NonEmpty\\Internal.purs","start":{"column":1,"line":228}}}]],["joker",[{"comments":"This advanced type's usage and its relation to `Clown` is best understood\nby reading through \"Clowns to the Left, Jokers to the Right (Functional\nPearl)\"\nhttps://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.475.6134&rep=rep1&type=pdf\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[{"name":"g"},{"name":"a"},{"name":"b"}]}},"moduleName":"Data.Functor.Joker","name":"Joker","packageInfo":{"tag":"package","value":"functors"},"score":4,"sourceSpan":{"end":{"column":34,"line":18},"name":".spago\\p\\functors-5.0.0\\src\\Data\\Functor\\Joker.purs","start":{"column":1,"line":18}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"g"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Joker"],"Joker"]},{"tag":"TypeVar","annotation":null,"contents":"g"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}},"moduleName":"Data.Functor.Joker","name":"Joker","packageInfo":{"tag":"package","value":"functors"},"score":4,"sourceSpan":{"end":{"column":34,"line":18},"name":".spago\\p\\functors-5.0.0\\src\\Data\\Functor\\Joker.purs","start":{"column":21,"line":18}}}]],["iprop",[{"comments":"The phantom row `r` can be thought of as a context which is synthesized in\nthe course of constructing a refined HTML expression.\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[{"kind":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Row"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]}]},"name":"r"},{"name":"i"}]}},"moduleName":"Halogen.HTML.Properties","name":"IProp","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":57,"line":101},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Properties.purs","start":{"column":1,"line":101}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","VDom","DOM","Prop"],"Prop"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","Input"],"Input"]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Properties"],"IProp"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]}}},"moduleName":"Halogen.HTML.Properties","name":"IProp","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":57,"line":101},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Properties.purs","start":{"column":33,"line":101}}}]],["grabbed",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"r","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Properties"],"IProp"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Properties.ARIA","name":"grabbed","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":43,"line":40},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Properties\\ARIA.purs","start":{"column":1,"line":40}}}]],["graft",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"},{"name":"t1"}]}},"moduleName":"Halogen.VDom.Types","name":"Graft","packageInfo":{"tag":"package","value":"halogen-vdom"},"score":1,"sourceSpan":{"end":{"column":47,"line":55},"name":".spago\\p\\halogen-vdom-8.0.0\\src\\Halogen\\VDom\\Types.purs","start":{"column":1,"line":55}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a'"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"w'"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","VDom","Types"],"VDom"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","VDom","Types"],"GraftX"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a'"}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"w'"}]}]}]}]}}},"moduleName":"Halogen.VDom.Types","name":"Graft","packageInfo":{"tag":"package","value":"halogen-vdom"},"score":1,"sourceSpan":{"end":{"column":8,"line":64},"name":".spago\\p\\halogen-vdom-8.0.0\\src\\Halogen\\VDom\\Types.purs","start":{"column":23,"line":63}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a'","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w'","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","VDom","Types"],"GraftX"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a'"}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"w'"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","VDom","Types"],"Graft"]},{"tag":"TypeVar","annotation":null,"contents":"a'"}]},{"tag":"TypeVar","annotation":null,"contents":"w'"}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.VDom.Types","name":"graft","packageInfo":{"tag":"package","value":"halogen-vdom"},"score":1,"sourceSpan":{"end":{"column":16,"line":69},"name":".spago\\p\\halogen-vdom-8.0.0\\src\\Halogen\\VDom\\Types.purs","start":{"column":1,"line":66}}}]],["grafted",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","VDom","Types"],"Graft"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","VDom","Types"],"VDom"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]}]}}},"moduleName":"Halogen.VDom.Types","name":"Grafted","packageInfo":{"tag":"package","value":"halogen-vdom"},"score":1,"sourceSpan":{"end":{"column":12,"line":31},"name":".spago\\p\\halogen-vdom-8.0.0\\src\\Halogen\\VDom\\Types.purs","start":{"column":3,"line":31}}}]],["graftx",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"a"},{"name":"a'"},{"name":"w"},{"name":"w'"}]}},"moduleName":"Halogen.VDom.Types","name":"GraftX","packageInfo":{"tag":"package","value":"halogen-vdom"},"score":1,"sourceSpan":{"end":{"column":37,"line":64},"name":".spago\\p\\halogen-vdom-8.0.0\\src\\Halogen\\VDom\\Types.purs","start":{"column":1,"line":63}}}]],["grate",[{"comments":"A grate (http://r6research.livejournal.com/28050.html)\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"s"},{"name":"t"},{"name":"a"},{"name":"b"}],"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"p","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Data","Profunctor","Closed"],"Closed"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Optic"]},{"tag":"TypeVar","annotation":null,"contents":"p"}]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},"skolem":null}}}},"moduleName":"Data.Lens.Types","name":"Grate","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":59,"line":148},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Types.purs","start":{"column":1,"line":148}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"s","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Grate"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Lens.Grate","name":"grate","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":65,"line":26},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Grate.purs","start":{"column":1,"line":26}}}]],["grate'",[{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"s"},{"name":"a"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Grate"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}},"moduleName":"Data.Lens.Types","name":"Grate'","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":32,"line":149},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Types.purs","start":{"column":1,"line":149}}}]],["grating",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[{"name":"a"},{"name":"b"},{"name":"s"},{"name":"t"}]}},"moduleName":"Data.Lens.Internal.Grating","name":"Grating","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":57,"line":9},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Internal\\Grating.purs","start":{"column":1,"line":9}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Internal","Grating"],"Grating"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]}]}}},"moduleName":"Data.Lens.Internal.Grating","name":"Grating","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":57,"line":9},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Internal\\Grating.purs","start":{"column":25,"line":9}}}]],["greaterthan",[{"comments":"Test whether one value is _strictly greater than_ another.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}]},"skolem":null}}},"moduleName":"Data.Ord","name":"greaterThan","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":52,"line":142},"name":".spago\\p\\prelude-6.0.2\\src\\Data\\Ord.purs","start":{"column":1,"line":142}}}]],["greaterthanoreq",[{"comments":"Test whether one value is _non-strictly greater than_ another.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}]},"skolem":null}}},"moduleName":"Data.Ord","name":"greaterThanOrEq","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":56,"line":154},"name":".spago\\p\\prelude-6.0.2\\src\\Data\\Ord.purs","start":{"column":1,"line":154}}}]],["group",[{"comments":"Creates a new inline group in the console. This indents following console\nmessages by an additional level, until `groupEnd` is called.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}},"moduleName":"Effect.Console","name":"group","packageInfo":{"tag":"package","value":"console"},"score":1,"sourceSpan":{"end":{"column":46,"line":73},"name":".spago\\p\\console-6.1.0\\src\\Effect\\Console.purs","start":{"column":1,"line":73}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]},"skolem":null}}},"moduleName":"Effect.Class.Console","name":"group","packageInfo":{"tag":"package","value":"console"},"score":1,"sourceSpan":{"end":{"column":53,"line":52},"name":".spago\\p\\console-6.1.0\\src\\Effect\\Class\\Console.purs","start":{"column":1,"line":52}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Eq"],"Eq"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.List.NonEmpty","name":"group","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":75,"line":254},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\NonEmpty.purs","start":{"column":1,"line":254}}},{"comments":"Group equal, consecutive elements of a list into lists.\n\nFor example,\n\n```purescript\ngroup (1 : 1 : 2 : 2 : 1 : Nil) == (1 : 1 : Nil) : (2 : 2 : Nil) : (1 : Nil) : Nil\n```\n\nRunning time: `O(n)`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Eq"],"Eq"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.List.Lazy","name":"group","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":63,"line":566},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy.purs","start":{"column":1,"line":566}}},{"comments":"Group equal, consecutive elements of a list into lists.\n\nFor example,\n\n```purescript\ngroup (1 : 1 : 2 : 2 : 1 : Nil) ==\n  (NonEmptyList (NonEmpty 1 (1 : Nil))) : (NonEmptyList (NonEmpty 2 (2 : Nil))) : (NonEmptyList (NonEmpty 1 Nil)) : Nil\n```\n\nRunning time: `O(n)`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Eq"],"Eq"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.List","name":"group","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":63,"line":584},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List.purs","start":{"column":1,"line":584}}},{"comments":"Group equal, consecutive elements of an array into arrays.\n\n```purescript\ngroup (NonEmptyArray [1, 1, 2, 2, 1]) ==\n  NonEmptyArray [NonEmptyArray [1, 1], NonEmptyArray [2, 2], NonEmptyArray [1]]\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Eq"],"Eq"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.Array.NonEmpty","name":"group","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":78,"line":458},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array\\NonEmpty.purs","start":{"column":1,"line":458}}},{"comments":"Group equal, consecutive elements of an array into arrays.\n\n```purescript\ngroup [1, 1, 2, 2, 1] == [NonEmptyArray [1, 1], NonEmptyArray [2, 2], NonEmptyArray [1]]\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Eq"],"Eq"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.Array","name":"group","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":62,"line":1044},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array.purs","start":{"column":1,"line":1044}}}]],["groupall",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.List.NonEmpty","name":"groupAll","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":79,"line":257},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\NonEmpty.purs","start":{"column":1,"line":257}}},{"comments":"Group equal elements of a list into lists.\n\nFor example,\n\n```purescript\ngroupAll (1 : 1 : 2 : 2 : 1 : Nil) ==\n  (NonEmptyList (NonEmpty 1 (1 : 1 : Nil))) : (NonEmptyList (NonEmpty 2 (2 : Nil))) : Nil\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.List","name":"groupAll","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":67,"line":595},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List.purs","start":{"column":1,"line":595}}},{"comments":"Group equal elements of an array into arrays.\n\n```purescript\ngroupAll (NonEmptyArray [1, 1, 2, 2, 1]) ==\n  NonEmptyArray [NonEmptyArray [1, 1, 1], NonEmptyArray [2, 2]]\n`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.Array.NonEmpty","name":"groupAll","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":82,"line":467},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array\\NonEmpty.purs","start":{"column":1,"line":467}}},{"comments":"Group equal elements of an array into arrays.\n\n```purescript\ngroupAll [1, 1, 2, 2, 1] == [NonEmptyArray [1, 1, 1], NonEmptyArray [2, 2]]\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.Array","name":"groupAll","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":66,"line":1052},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array.purs","start":{"column":1,"line":1052}}}]],["groupallby",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Ordering"],"Ordering"]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.List.NonEmpty","name":"groupAllBy","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":96,"line":263},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\NonEmpty.purs","start":{"column":1,"line":263}}},{"comments":"Sort, then group equal elements of a list into lists, using the provided comparison function.\n\n```purescript\ngroupAllBy (compare `on` (_ `div` 10)) (32 : 31 : 21 : 22 : 11 : 33 : Nil) ==\n  NonEmptyList (11 :| Nil) : NonEmptyList (21 :| 22 : Nil) : NonEmptyList (32 :| 31 : 33) : Nil\n```\n\nRunning time: `O(n log n)`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Ordering"],"Ordering"]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.List","name":"groupAllBy","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":84,"line":622},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List.purs","start":{"column":1,"line":622}}},{"comments":"Group equal elements of an array into arrays, using the specified\ncomparison function to determine equality.\n\n```purescript\ngroupAllBy (comparing Down) (NonEmptyArray [1, 3, 2, 4, 3, 3])\n   = NonEmptyArray [NonEmptyArray [4], NonEmptyArray [3, 3, 3], NonEmptyArray [2], NonEmptyArray [1]]\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Ordering"],"Ordering"]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.Array.NonEmpty","name":"groupAllBy","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":99,"line":488},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array\\NonEmpty.purs","start":{"column":1,"line":488}}},{"comments":"Group equal elements of an array into arrays, using the specified\ncomparison function to determine equality.\n\n```purescript\ngroupAllBy (comparing Down) [1, 3, 2, 4, 3, 3]\n   = [NonEmptyArray [4], NonEmptyArray [3, 3, 3], NonEmptyArray [2], NonEmptyArray [1]]\n```\n\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Ordering"],"Ordering"]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.Array","name":"groupAllBy","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":83,"line":1084},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array.purs","start":{"column":1,"line":1084}}}]],["groupby",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.List.NonEmpty","name":"groupBy","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":92,"line":260},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\NonEmpty.purs","start":{"column":1,"line":260}}},{"comments":"Group equal, consecutive elements of a list into lists, using the specified\nequivalence relation to determine equality.\n\nRunning time: `O(n)`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.List.Lazy","name":"groupBy","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":80,"line":573},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy.purs","start":{"column":1,"line":573}}},{"comments":"Group equal, consecutive elements of a list into lists, using the specified\nequivalence relation to determine equality.\n\nFor example,\n\n```purescript\ngroupBy (\\a b -> odd a && odd b) (1 : 3 : 2 : 4 : 3 : 3 : Nil) ==\n  (NonEmptyList (NonEmpty 1 (3 : Nil))) : (NonEmptyList (NonEmpty 2 Nil)) : (NonEmptyList (NonEmpty 4 Nil)) : (NonEmptyList (NonEmpty 3 (3 : Nil))) : Nil\n```\n\nRunning time: `O(n)`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.List","name":"groupBy","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":80,"line":609},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List.purs","start":{"column":1,"line":609}}},{"comments":"Group equal, consecutive elements of an array into arrays, using the\nspecified equivalence relation to determine equality.\n\n```purescript\ngroupBy (\\a b -> odd a && odd b) (NonEmptyArray [1, 3, 2, 4, 3, 3])\n   = NonEmptyArray [NonEmptyArray [1, 3], NonEmptyArray [2], NonEmptyArray [4], NonEmptyArray [3, 3]]\n```\n\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.Array.NonEmpty","name":"groupBy","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":95,"line":478},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array\\NonEmpty.purs","start":{"column":1,"line":478}}},{"comments":"Group equal, consecutive elements of an array into arrays, using the\nspecified equivalence relation to determine equality.\n\n```purescript\ngroupBy (\\a b -> odd a && odd b) [1, 3, 2, 4, 3, 3]\n   = [NonEmptyArray [1, 3], NonEmptyArray [2], NonEmptyArray [4], NonEmptyArray [3, 3]]\n```\n\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}}},"moduleName":"Data.Array","name":"groupBy","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":79,"line":1063},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array.purs","start":{"column":1,"line":1063}}}]],["groupcollapsed",[{"comments":"Same as `group`, but groups are collapsed by default.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}},"moduleName":"Effect.Console","name":"groupCollapsed","packageInfo":{"tag":"package","value":"console"},"score":1,"sourceSpan":{"end":{"column":55,"line":76},"name":".spago\\p\\console-6.1.0\\src\\Effect\\Console.purs","start":{"column":1,"line":76}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]},"skolem":null}}},"moduleName":"Effect.Class.Console","name":"groupCollapsed","packageInfo":{"tag":"package","value":"console"},"score":1,"sourceSpan":{"end":{"column":62,"line":55},"name":".spago\\p\\console-6.1.0\\src\\Effect\\Class\\Console.purs","start":{"column":1,"line":55}}}]],["grouped",[{"comments":"Perform an effect within the context of an inline group in the console.\nCalls `group` and `groupEnd` before and after the effect, respectively.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}}},"moduleName":"Effect.Console","name":"grouped","packageInfo":{"tag":"package","value":"console"},"score":1,"sourceSpan":{"end":{"column":52,"line":83},"name":".spago\\p\\console-6.1.0\\src\\Effect\\Console.purs","start":{"column":1,"line":83}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Effect.Class.Console","name":"grouped","packageInfo":{"tag":"package","value":"console"},"score":1,"sourceSpan":{"end":{"column":61,"line":61},"name":".spago\\p\\console-6.1.0\\src\\Effect\\Class\\Console.purs","start":{"column":1,"line":61}}}]],["groupend",[{"comments":"Exits the current inline group in the console.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}},"moduleName":"Effect.Console","name":"groupEnd","packageInfo":{"tag":"package","value":"console"},"score":1,"sourceSpan":{"end":{"column":39,"line":79},"name":".spago\\p\\console-6.1.0\\src\\Effect\\Console.purs","start":{"column":1,"line":79}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Effect","Class"],"MonadEffect"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]},"skolem":null}}},"moduleName":"Effect.Class.Console","name":"groupEnd","packageInfo":{"tag":"package","value":"console"},"score":1,"sourceSpan":{"end":{"column":46,"line":58},"name":".spago\\p\\console-6.1.0\\src\\Effect\\Class\\Console.purs","start":{"column":1,"line":58}}}]],["fst",[{"comments":"Returns the first component of a tuple.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Tuple","name":"fst","packageInfo":{"tag":"package","value":"tuples"},"score":23,"sourceSpan":{"end":{"column":34,"line":118},"name":".spago\\p\\tuples-7.0.0\\src\\Data\\Tuple.purs","start":{"column":1,"line":118}}}]],["dual",[{"comments":"The dual of a monoid.\n\n``` purescript\nDual x <> Dual y == Dual (y <> x)\n(mempty :: Dual _) == Dual mempty\n```\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[{"name":"a"}]}},"moduleName":"Data.Monoid.Dual","name":"Dual","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":24,"line":14},"name":".spago\\p\\prelude-6.0.2\\src\\Data\\Monoid\\Dual.purs","start":{"column":1,"line":14}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Monoid","Dual"],"Dual"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}}},"moduleName":"Data.Monoid.Dual","name":"Dual","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":24,"line":14},"name":".spago\\p\\prelude-6.0.2\\src\\Data\\Monoid\\Dual.purs","start":{"column":16,"line":14}}}]],["duplex",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[]}},"moduleName":"JS.Fetch.Duplex","name":"Duplex","packageInfo":{"tag":"package","value":"js-fetch"},"score":1,"sourceSpan":{"end":{"column":26,"line":7},"name":".spago\\p\\js-fetch-0.2.1\\src\\JS\\Fetch\\Duplex.purs","start":{"column":1,"line":7}}}]],["duplicate",[{"comments":"Duplicate a comonadic context.\n\n`duplicate` is dual to `Control.Bind.join`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"w"}],"constraintClass":[["Control","Extend"],"Extend"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Control.Extend","name":"duplicate","packageInfo":{"tag":"package","value":"control"},"score":22,"sourceSpan":{"end":{"column":52,"line":58},"name":".spago\\p\\control-6.0.0\\src\\Control\\Extend.purs","start":{"column":1,"line":58}}}]],["duration",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","HTML","HTMLMediaElement"],"HTMLMediaElement"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}]}},"moduleName":"Web.HTML.HTMLMediaElement","name":"duration","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":61,"line":157},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\HTMLMediaElement.purs","start":{"column":1,"line":157}}},{"comments":"A class for enabling conversions between duration types.\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"a"}],"fundeps":[],"superclasses":[]}},"moduleName":"Data.Time.Duration","name":"Duration","packageInfo":{"tag":"package","value":"datetime"},"score":4,"sourceSpan":{"end":{"column":34,"line":90},"name":".spago\\p\\datetime-6.1.0\\src\\Data\\Time\\Duration.purs","start":{"column":1,"line":88}}},{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[]}},"moduleName":"Data.Interval.Duration","name":"Duration","packageInfo":{"tag":"package","value":"datetime"},"score":4,"sourceSpan":{"end":{"column":63,"line":19},"name":".spago\\p\\datetime-6.1.0\\src\\Data\\Interval\\Duration.purs","start":{"column":1,"line":19}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Interval","Duration"],"DurationComponent"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Interval","Duration"],"Duration"]}]}}},"moduleName":"Data.Interval.Duration","name":"Duration","packageInfo":{"tag":"package","value":"datetime"},"score":4,"sourceSpan":{"end":{"column":63,"line":19},"name":".spago\\p\\datetime-6.1.0\\src\\Data\\Interval\\Duration.purs","start":{"column":18,"line":19}}}]],["durationcomponent",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[]}},"moduleName":"Data.Interval.Duration","name":"DurationComponent","packageInfo":{"tag":"package","value":"datetime"},"score":4,"sourceSpan":{"end":{"column":76,"line":34},"name":".spago\\p\\datetime-6.1.0\\src\\Data\\Interval\\Duration.purs","start":{"column":1,"line":34}}}]],["durationend",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"d"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Interval"],"Interval"]},{"tag":"TypeVar","annotation":null,"contents":"d"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]}}},"moduleName":"Data.Interval","name":"DurationEnd","packageInfo":{"tag":"package","value":"datetime"},"score":4,"sourceSpan":{"end":{"column":16,"line":60},"name":".spago\\p\\datetime-6.1.0\\src\\Data\\Interval.purs","start":{"column":3,"line":60}}}]],["durationonly",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"d"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Interval"],"Interval"]},{"tag":"TypeVar","annotation":null,"contents":"d"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}}},"moduleName":"Data.Interval","name":"DurationOnly","packageInfo":{"tag":"package","value":"datetime"},"score":4,"sourceSpan":{"end":{"column":17,"line":62},"name":".spago\\p\\datetime-6.1.0\\src\\Data\\Interval.purs","start":{"column":3,"line":62}}}]]]