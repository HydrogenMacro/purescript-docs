// This file was generated by docs-search
window.DocsSearchTypeIndex["828621320"] = [{"comments":"Convert an `Array` into an `Unfoldable` structure.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]}]},"skolem":null}}},"moduleName":"Data.Array","name":"toUnfoldable","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":53,"line":159},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array.purs","start":{"column":1,"line":159}}},{"comments":"Convert a `Foldable` structure into an `Array`.\n\n```purescript\nfromFoldable (Just 1) = [1]\nfromFoldable (Nothing) = []\n```\n\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]}]}]},"skolem":null}}},"moduleName":"Data.Array","name":"fromFoldable","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":51,"line":174},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array.purs","start":{"column":1,"line":174}}},{"comments":"Convert any `Foldable` into a `CatList`.\n\nRunning time: `O(n)`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","CatList"],"CatList"]}]}]},"skolem":null}}},"moduleName":"Data.CatList","name":"fromFoldable","packageInfo":{"tag":"package","value":"catenable-lists"},"score":1,"sourceSpan":{"end":{"column":53,"line":131},"name":".spago\\p\\catenable-lists-7.0.0\\src\\Data\\CatList.purs","start":{"column":1,"line":131}}},{"comments":"There is a `Unit` in everything.\n```purescript\n> view united [1,2,3]\nunit\n> over united (\\a -> a :: Unit) [1,2,3]\n[1 2 3]\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]},"skolem":null}}},"moduleName":"Data.Lens.Lens.Unit","name":"united","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":33,"line":14},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Lens\\Unit.purs","start":{"column":1,"line":14}}},{"comments":"There is everything in `Void`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Lens'"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Void"],"Void"]}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},"skolem":null}}},"moduleName":"Data.Lens.Lens.Void","name":"devoid","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":33,"line":8},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Lens\\Void.purs","start":{"column":1,"line":8}}},{"comments":"Construct a list from a foldable structure.\n\nRunning time: `O(n)`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]}]}]},"skolem":null}}},"moduleName":"Data.List","name":"fromFoldable","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":50,"line":127},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List.purs","start":{"column":1,"line":127}}},{"comments":"Convert a list into any unfoldable structure.\n\nRunning time: `O(n)`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]}]},"skolem":null}}},"moduleName":"Data.List","name":"toUnfoldable","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":52,"line":121},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List.purs","start":{"column":1,"line":121}}},{"comments":"Construct a list from a foldable structure.\n\nRunning time: `O(n)`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]}]}]},"skolem":null}}},"moduleName":"Data.List.Lazy","name":"fromFoldable","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":50,"line":128},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy.purs","start":{"column":1,"line":128}}},{"comments":"Convert a list into any unfoldable structure.\n\nRunning time: `O(n)`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]}]},"skolem":null}}},"moduleName":"Data.List.Lazy","name":"toUnfoldable","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":52,"line":122},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy.purs","start":{"column":1,"line":122}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]}]},"skolem":null}}},"moduleName":"Data.List.Lazy.NonEmpty","name":"toUnfoldable","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":60,"line":33},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy\\NonEmpty.purs","start":{"column":1,"line":33}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Unfoldable"],"Unfoldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]}]},"skolem":null}}},"moduleName":"Data.List.NonEmpty","name":"toUnfoldable","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":60,"line":114},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\NonEmpty.purs","start":{"column":1,"line":114}}},{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Effect","Aff","Class"],"MonadAff"],"constraintData":null,"constraintKindArgs":[]},{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeVar","annotation":null,"contents":"m"}]}]},"skolem":null}},"typeClass":[["Effect","Aff","Class"],"MonadAff"],"typeClassArguments":[{"name":"m"}]}},"moduleName":"Effect.Aff.Class","name":"liftAff","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":22,"line":17},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff\\Class.purs","start":{"column":3,"line":17}}}]