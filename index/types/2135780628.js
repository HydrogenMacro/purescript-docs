// This file was generated by docs-search
window.DocsSearchTypeIndex["2135780628"] = [{"comments":"Starts a `HalogenM` process running independent from the current `eval`\n\"thread\".\n\nA commonly use case for `fork` is in component initializers where some\nasync action is started. Normally all interaction with the component will\nbe blocked until the initializer completes, but if the async action is\n`fork`ed instead, the initializer can complete synchronously while the\nasync action continues.\n\nSome care needs to be taken when using a `fork` that can modify the\ncomponent state, as it's easy for the forked process to \"clobber\" the state\n(overwrite some or all of it with an old value) by mistake.\n\nWhen a component is disposed of any active forks will automatically\nbe killed. New forks can be started during finalization but there will be\nno means of killing them.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"state","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"action","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slots","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"HalogenM"]},{"tag":"TypeVar","annotation":null,"contents":"state"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"output"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"HalogenM"]},{"tag":"TypeVar","annotation":null,"contents":"state"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"output"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"ForkId"]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.Query.HalogenM","name":"fork","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":133,"line":217},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\HalogenM.purs","start":{"column":1,"line":217}}}]