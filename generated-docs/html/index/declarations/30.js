// This file was generated by docs-search.
window.DocsSearchIndex["30"] = [["tr",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Elements","Keyed"],"KeyedNode"]},{"tag":"TypeConstructor","annotation":null,"contents":[["DOM","HTML","Indexed"],"HTMLtr"]}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements.Keyed","name":"tr","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":41,"line":138},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements\\Keyed.purs","start":{"column":1,"line":138}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","annotation":null,"contents":[["DOM","HTML","Indexed"],"HTMLtr"]}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"tr","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":36,"line":868},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":868}}}]],["tr_",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements.Keyed","name":"tr_","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":63,"line":141},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements\\Keyed.purs","start":{"column":1,"line":141}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"tr_","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":48,"line":871},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":871}}}]],["trace",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeConstructor","annotation":null,"contents":[["Data","HTTP","Method"],"Method"]}}},"moduleName":"Data.HTTP.Method","name":"TRACE","packageInfo":{"tag":"package","value":"http-methods"},"score":2,"sourceSpan":{"end":{"column":10,"line":25},"name":".spago\\p\\http-methods-6.0.0\\src\\Data\\HTTP\\Method.purs","start":{"column":3,"line":25}}}]],["traced",[{"comments":"The `Traced` comonad is a synonym for the `TracedT` comonad transformer, applied\nto the `Identity` monad.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"m"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Identity"],"Identity"]}]}}},"moduleName":"Control.Comonad.Traced","name":"Traced","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":35,"line":21},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Comonad\\Traced.purs","start":{"column":1,"line":21}}},{"comments":"Create a value in context in the `Traced` comonad.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Comonad","Traced"],"Traced"]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Control.Comonad.Traced","name":"traced","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":45,"line":28},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Comonad\\Traced.purs","start":{"column":1,"line":28}}}]],["tracedt",[{"comments":"The cowriter comonad transformer.\n\nThis comonad transformer extends the context of a value in the base comonad so that the value\ndepends on a monoidal position of type `t`.\n\nThe `ComonadTraced` type class describes the operations supported by this comonad.\n","hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[{"name":"t"},{"name":"w"},{"name":"a"}]}},"moduleName":"Control.Comonad.Traced.Trans","name":"TracedT","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":45,"line":18},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Comonad\\Traced\\Trans.purs","start":{"column":1,"line":18}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"t"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","annotation":null,"contents":"t"}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}}},"moduleName":"Control.Comonad.Traced.Trans","name":"TracedT","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":45,"line":18},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Comonad\\Traced\\Trans.purs","start":{"column":23,"line":18}}}]],["track",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Elements"],"Leaf"]},{"tag":"TypeConstructor","annotation":null,"contents":[["DOM","HTML","Indexed"],"HTMLtrack"]}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"track","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":42,"line":874},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":874}}},{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"w"}],"constraintClass":[["Control","Comonad","Traced","Class"],"ComonadTraced"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"t"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Control","Comonad","Traced","Class"],"ComonadTraced"],"typeClassArguments":[{"name":"t"},{"name":"w"}]}},"moduleName":"Control.Comonad.Traced.Class","name":"track","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":35,"line":41},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Comonad\\Traced\\Class.purs","start":{"column":3,"line":41}}}]],["trackevent",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[]}},"moduleName":"Web.HTML.Event.TrackEvent","name":"TrackEvent","packageInfo":{"tag":"package","value":"web-html"},"score":3,"sourceSpan":{"end":{"column":39,"line":8},"name":".spago\\p\\web-html-4.1.0\\src\\Web\\HTML\\Event\\TrackEvent.purs","start":{"column":1,"line":8}}}]],["tracks",[{"comments":"Extracts a value at a relative position which depends on the current value.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"w"}],"constraintClass":[["Control","Comonad","Traced","Class"],"ComonadTraced"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"w"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Control.Comonad.Traced.Class","name":"tracks","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":66,"line":44},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Comonad\\Traced\\Class.purs","start":{"column":1,"line":44}}}]],["trampoline",[{"comments":"The `Trampoline` monad\n\nA computation of type `Trampoline a` consists of zero or more lazy\nsuspensions before a value is returned.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Free"],"Free"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}}]}}},"moduleName":"Control.Monad.Trampoline","name":"Trampoline","packageInfo":{"tag":"package","value":"free"},"score":1,"sourceSpan":{"end":{"column":35,"line":21},"name":".spago\\p\\free-7.1.0\\src\\Control\\Monad\\Trampoline.purs","start":{"column":1,"line":21}}}]],["transitionevents",[{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"r"}],"type":{"tag":"RCons","annotation":null,"contents":["\u0000o\u0000n\u0000T\u0000r\u0000a\u0000n\u0000s\u0000i\u0000t\u0000i\u0000o\u0000n\u0000E\u0000n\u0000d",{"tag":"TypeConstructor","annotation":null,"contents":[["Web","Event","Internal","Types"],"Event"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]}}},"moduleName":"DOM.HTML.Indexed","name":"TransitionEvents","packageInfo":{"tag":"package","value":"dom-indexed"},"score":1,"sourceSpan":{"end":{"column":4,"line":115},"name":".spago\\p\\dom-indexed-13.0.0\\src\\DOM\\HTML\\Indexed.purs","start":{"column":1,"line":112}}}]],["transpose",[{"comments":"The 'transpose' function transposes the rows and columns of its argument.\nFor example,\n\n    transpose ((1:2:3:nil) : (4:5:6:nil) : nil) ==\n      ((1:4:nil) : (2:5:nil) : (3:6:nil) : nil)\n\nIf some of the rows are shorter than the following rows, their elements are skipped:\n\n    transpose ((10:11:nil) : (20:nil) : nil : (30:31:32:nil) : nil) ==\n      ((10:20:30:nil) : (11:31:nil) : (32:nil) : nil)\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}}},"moduleName":"Data.List.Lazy","name":"transpose","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":54,"line":740},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy.purs","start":{"column":1,"line":740}}},{"comments":"The 'transpose' function transposes the rows and columns of its argument.\nFor example,\n\n    transpose ((1:2:3:Nil) : (4:5:6:Nil) : Nil) ==\n      ((1:4:Nil) : (2:5:Nil) : (3:6:Nil) : Nil)\n\nIf some of the rows are shorter than the following rows, their elements are skipped:\n\n    transpose ((10:11:Nil) : (20:Nil) : Nil : (30:31:32:Nil) : Nil) ==\n      ((10:20:30:Nil) : (11:31:Nil) : (32:Nil) : Nil)\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}}},"moduleName":"Data.List","name":"transpose","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":54,"line":813},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List.purs","start":{"column":1,"line":813}}},{"comments":"The 'transpose' function transposes the rows and columns of its argument.\nFor example,\n\n```purescript\ntranspose \n  (NonEmptyArray [ NonEmptyArray [1, 2, 3]\n                 , NonEmptyArray [4, 5, 6]\n                 ]) == \n  (NonEmptyArray [ NonEmptyArray [1, 4]\n                 , NonEmptyArray [2, 5]\n                 , NonEmptyArray [3, 6]\n                 ])\n```\n\nIf some of the rows are shorter than the following rows, their elements are skipped:\n\n```purescript\ntranspose \n  (NonEmptyArray [ NonEmptyArray [10, 11]\n                 , NonEmptyArray [20]\n                 , NonEmptyArray [30, 31, 32]\n                 ]) == \n  (NomEmptyArray [ NonEmptyArray [10, 20, 30]\n                 , NonEmptyArray [11, 31]\n                 , NonEmptyArray [32]\n                 ])\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}}},"moduleName":"Data.Array.NonEmpty","name":"transpose","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":90,"line":398},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array\\NonEmpty.purs","start":{"column":1,"line":398}}},{"comments":"The 'transpose' function transposes the rows and columns of its argument.\nFor example,\n\n```purescript\ntranspose \n  [ [1, 2, 3]\n  , [4, 5, 6]\n  ] == \n  [ [1, 4]\n  , [2, 5]\n  , [3, 6]\n  ]\n```\n\nIf some of the rows are shorter than the following rows, their elements are skipped:\n\n```purescript\ntranspose \n  [ [10, 11]\n  , [20]\n  , [30, 31, 32]\n  ] == \n  [ [10, 20, 30]\n  , [11, 31]\n  , [32]\n  ]\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}}},"moduleName":"Data.Array","name":"transpose","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":58,"line":833},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array.purs","start":{"column":1,"line":833}}}]],["transpose'",[{"comments":"`transpose`' is identical to `transpose` other than that the inner arrays are each\na standard `Array` and not a `NonEmptyArray`. However, the result is wrapped in a \n`Maybe` to cater for the case where the inner `Array` is empty and must return `Nothing`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}}]}]},"skolem":null}}},"moduleName":"Data.Array.NonEmpty","name":"transpose'","packageInfo":{"tag":"package","value":"arrays"},"score":8,"sourceSpan":{"end":{"column":83,"line":406},"name":".spago\\p\\arrays-7.3.0\\src\\Data\\Array\\NonEmpty.purs","start":{"column":1,"line":406}}}]],["traversable",[{"comments":"`Traversable` represents data structures which can be _traversed_,\naccumulating results and effects in some `Applicative` functor.\n\n- `traverse` runs an action for every element in a data structure,\n  and accumulates the results.\n- `sequence` runs the actions _contained_ in a data structure,\n  and accumulates the results.\n\n```purescript\nimport Data.Traversable\nimport Data.Maybe\nimport Data.Int (fromNumber)\n\nsequence [Just 1, Just 2, Just 3] == Just [1,2,3]\nsequence [Nothing, Just 2, Just 3] == Nothing\n\ntraverse fromNumber [1.0, 2.0, 3.0] == Just [1,2,3]\ntraverse fromNumber [1.5, 2.0, 3.0] == Nothing\n\ntraverse logShow [1,2,3]\n-- prints:\n   1\n   2\n   3\n\ntraverse (\\x -> [x, 0]) [1,2,3] == [[1,2,3],[1,2,0],[1,0,3],[1,0,0],[0,2,3],[0,2,0],[0,0,3],[0,0,0]]\n```\n\nThe `traverse` and `sequence` functions should be compatible in the\nfollowing sense:\n\n- `traverse f xs = sequence (f <$> xs)`\n- `sequence = traverse identity`\n\n`Traversable` instances should also be compatible with the corresponding\n`Foldable` instances, in the following sense:\n\n- `foldMap f = runConst <<< traverse (Const <<< f)`\n\nDefault implementations are provided by the following functions:\n\n- `traverseDefault`\n- `sequenceDefault`\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"t"}],"fundeps":[],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Functor"],"Functor"],"constraintData":null,"constraintKindArgs":[]},{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Data.Traversable","name":"Traversable","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":62,"line":81},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Traversable.purs","start":{"column":1,"line":79}}}]],["traversable1",[{"comments":"`Traversable1` represents data structures with a minimum of one element that can be _traversed_,\naccumulating results and effects in some `Applicative` functor.\n\n- `traverse1` runs an action for every element in a data structure,\n  and accumulates the results.\n- `sequence1` runs the actions _contained_ in a data structure,\n  and accumulates the results.\n\nThe `traverse1` and `sequence1` functions should be compatible in the\nfollowing sense:\n\n- `traverse1 f xs = sequence1 (f <$> xs)`\n- `sequence1 = traverse1 identity`\n\n`Traversable1` instances should also be compatible with the corresponding\n`Foldable1` instances, in the following sense:\n\n- `foldMap1 f = runConst <<< traverse1 (Const <<< f)`\n\nDefault implementations are provided by the following functions:\n\n- `traverse1Default`\n- `sequence1Default`\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"t"}],"fundeps":[],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintData":null,"constraintKindArgs":[]},{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Traversable"],"Traversable"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Data.Semigroup.Traversable","name":"Traversable1","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":57,"line":37},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Semigroup\\Traversable.purs","start":{"column":1,"line":35}}}]],["traversablewithindex",[{"comments":"A `Traversable` with an additional index.  \nA `TraversableWithIndex` instance must be compatible with its\n`Traversable` instance\n```purescript\ntraverse f = traverseWithIndex (const f)\n```\nwith its `FoldableWithIndex` instance\n```\nfoldMapWithIndex f = unwrap <<< traverseWithIndex (\\i -> Const <<< f i)\n```\nand with its `FunctorWithIndex` instance\n```\nmapWithIndex f = unwrap <<< traverseWithIndex (\\i -> Identity <<< f i)\n```\n\nA default implementation is provided by `traverseWithIndexDefault`.\n","hashAnchor":"t","info":{"tag":"typeClass","value":{"arguments":[{"name":"i"},{"name":"t"}],"fundeps":[[["t"],["i"]]],"superclasses":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"i"},{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","FunctorWithIndex"],"FunctorWithIndex"],"constraintData":null,"constraintKindArgs":[]},{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"i"},{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","FoldableWithIndex"],"FoldableWithIndex"],"constraintData":null,"constraintKindArgs":[]},{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Traversable"],"Traversable"],"constraintData":null,"constraintKindArgs":[]}]}},"moduleName":"Data.TraversableWithIndex","name":"TraversableWithIndex","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":88,"line":56},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\TraversableWithIndex.purs","start":{"column":1,"line":55}}}]],["traversal",[{"comments":"A traversal.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"s"},{"name":"t"},{"name":"a"},{"name":"b"}],"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"p","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"p"}],"constraintClass":[["Data","Lens","Internal","Wander"],"Wander"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Optic"]},{"tag":"TypeVar","annotation":null,"contents":"p"}]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},"skolem":null}}}},"moduleName":"Data.Lens.Types","name":"Traversal","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":63,"line":98},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Types.purs","start":{"column":1,"line":98}}}]],["traversal'",[{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"s"},{"name":"a"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Traversal"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}},"moduleName":"Data.Lens.Types","name":"Traversal'","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":40,"line":99},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Types.purs","start":{"column":1,"line":99}}}]],["traverse",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Traversable"],"Traversable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","Traversable"],"Traversable"],"typeClassArguments":[{"name":"t"}]}},"moduleName":"Data.Traversable","name":"traverse","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":74,"line":80},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Traversable.purs","start":{"column":3,"line":80}}},{"comments":"Similar to the function from the `Traversable` class, but operating within\na newtype instead.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"t"}]}}],"constraintClass":[["Prim","Coerce"],"Coercible"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}],"constraintClass":[["Data","Newtype"],"Newtype"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"t"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"t"}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Newtype","name":"traverse","packageInfo":{"tag":"package","value":"newtype"},"score":23,"sourceSpan":{"end":{"column":9,"line":295},"name":".spago\\p\\newtype-5.0.0\\src\\Data\\Newtype.purs","start":{"column":1,"line":288}}}]],["traverse1",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Semigroup","Traversable"],"Traversable1"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Apply"],"Apply"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","Semigroup","Traversable"],"Traversable1"],"typeClassArguments":[{"name":"t"}]}},"moduleName":"Data.Semigroup.Traversable","name":"traverse1","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":69,"line":36},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Semigroup\\Traversable.purs","start":{"column":3,"line":36}}}]],["traverse1_",[{"comments":"Traverse a data structure, performing some effects encoded by an\n`Apply` instance at each value, ignoring the final result.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Semigroup","Foldable"],"Foldable1"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Apply"],"Apply"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Semigroup.Foldable","name":"traverse1_","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":84,"line":117},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Semigroup\\Foldable.purs","start":{"column":1,"line":117}}}]],["traverse1default",[{"comments":"A default implementation of `traverse1` using `sequence1`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Semigroup","Traversable"],"Traversable1"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Apply"],"Apply"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Semigroup.Traversable","name":"traverse1Default","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":13,"line":62},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Semigroup\\Traversable.purs","start":{"column":1,"line":56}}}]],["traverse_",[{"comments":"Traverse a data structure, performing some effects encoded by an\n`Applicative` functor at each value, ignoring the final result.\n\nFor example:\n\n```purescript\ntraverse_ print [1, 2, 3]\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","Foldable"],"Foldable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Foldable","name":"traverse_","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":12,"line":249},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Foldable.purs","start":{"column":1,"line":243}}}]],["traversed",[{"comments":"A `Traversal` for the elements of a `Traversable` functor.\n\n```purescript\nover traversed negate [1, 2, 3] == [-1,-2,-3]\nover traversed negate (Just 3) == Just -3\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Traversable"],"Traversable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Traversal"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Lens.Traversal","name":"traversed","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":70,"line":55},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Traversal.purs","start":{"column":1,"line":55}}}]],["traversedefault",[{"comments":"A default implementation of `traverse` in terms of `traverseWithIndex`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"i"},{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","TraversableWithIndex"],"TraversableWithIndex"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.TraversableWithIndex","name":"traverseDefault","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":34,"line":212},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\TraversableWithIndex.purs","start":{"column":1,"line":208}}},{"comments":"A default implementation of `traverse` using `sequence` and `map`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Traversable"],"Traversable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Traversable","name":"traverseDefault","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":13,"line":90},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Traversable.purs","start":{"column":1,"line":84}}}]],["traverseof",[{"comments":"Turn a pure profunctor `Traversal` into a `lens`-like `Traversal`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"s","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Optic"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Profunctor","Star"],"Star"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]}}]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"t"}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Lens.Traversal","name":"traverseOf","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":81,"line":59},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Traversal.purs","start":{"column":1,"line":59}}}]],["traverseof_",[{"comments":"Traverse the foci of a `Fold`, discarding the results.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"s","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"r","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Fold"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Monoid","Endo"],"Endo"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}}]}}]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeVar","annotation":null,"contents":"t"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"r"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Lens.Fold","name":"traverseOf_","packageInfo":{"tag":"package","value":"profunctor-lenses"},"score":1,"sourceSpan":{"end":{"column":12,"line":176},"name":".spago\\p\\profunctor-lenses-8.0.0\\src\\Data\\Lens\\Fold.purs","start":{"column":1,"line":170}}}]],["traversewithindex",[{"hashAnchor":"v","info":{"tag":"typeClassMember","value":{"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"i"},{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","TraversableWithIndex"],"TraversableWithIndex"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"typeClass":[["Data","TraversableWithIndex"],"TraversableWithIndex"],"typeClassArguments":[{"name":"i"},{"name":"t"}]}},"moduleName":"Data.TraversableWithIndex","name":"traverseWithIndex","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":88,"line":56},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\TraversableWithIndex.purs","start":{"column":3,"line":56}}}]],["traversewithindex_",[{"comments":"Traverse a data structure with access to the index, performing some\neffects encoded by an `Applicative` functor at each value, ignoring the\nfinal result.\n\nFor example:\n\n```purescript\n> traverseWithIndex_ (curry logShow) [\"a\", \"b\", \"c\"]\n(Tuple 0 \"a\")\n(Tuple 1 \"b\")\n(Tuple 2 \"c\")\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"i"},{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Data","FoldableWithIndex"],"FoldableWithIndex"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.FoldableWithIndex","name":"traverseWithIndex_","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":12,"line":240},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\FoldableWithIndex.purs","start":{"column":1,"line":234}}}]],["traversewithindexdefault",[{"comments":"A default implementation of `traverseWithIndex` using `sequence` and `mapWithIndex`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"i"},{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","TraversableWithIndex"],"TraversableWithIndex"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"b"}]}}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.TraversableWithIndex","name":"traverseWithIndexDefault","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":13,"line":65},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\TraversableWithIndex.purs","start":{"column":1,"line":59}}}]],["trim",[{"comments":"Removes whitespace from the beginning and end of a string, including\n[whitespace characters](http://www.ecma-international.org/ecma-262/5.1/#sec-7.2)\nand [line terminators](http://www.ecma-international.org/ecma-262/5.1/#sec-7.3).\nIf the string is entirely made up of whitespace the result will be Nothing.\n\n```purescript\ntrim (NonEmptyString \"   Hello  \\n World\\n\\t    \") == Just (NonEmptyString \"Hello  \\n World\")\ntrim (NonEmptyString \"   \\n\") == Nothing\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"]}]}]}},"moduleName":"Data.String.NonEmpty.Internal","name":"trim","packageInfo":{"tag":"package","value":"strings"},"score":4,"sourceSpan":{"end":{"column":47,"line":190},"name":".spago\\p\\strings-6.0.1\\src\\Data\\String\\NonEmpty\\Internal.purs","start":{"column":1,"line":190}}},{"comments":"Removes whitespace from the beginning and end of a string, including\n[whitespace characters](http://www.ecma-international.org/ecma-262/5.1/#sec-7.2)\nand [line terminators](http://www.ecma-international.org/ecma-262/5.1/#sec-7.3).\n\n```purescript\ntrim \"   Hello  \\n World\\n\\t    \" == \"Hello  \\n World\"\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.String.Common","name":"trim","packageInfo":{"tag":"package","value":"strings"},"score":4,"sourceSpan":{"end":{"column":40,"line":88},"name":".spago\\p\\strings-6.0.1\\src\\Data\\String\\Common.purs","start":{"column":1,"line":88}}}]],["true",[{"comments":"The 'True' boolean type.\n","hashAnchor":"t","info":{"tag":"externData","value":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}},"moduleName":"Prim.Boolean","name":"True","packageInfo":{"tag":"builtin"},"score":0}]],["trunc",[{"comments":"Truncates the decimal portion of a number. Equivalent to `floor` if the\nnumber is positive, and `ceil` if the number is negative.\n```purs\nceil 1.5\n2.0\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Number","name":"trunc","packageInfo":{"tag":"package","value":"numbers"},"score":2,"sourceSpan":{"end":{"column":41,"line":264},"name":".spago\\p\\numbers-9.0.1\\src\\Data\\Number.purs","start":{"column":1,"line":264}}},{"comments":"Convert a `Number` to an `Int`, by dropping the decimal.\nValues outside the `Int` range are clamped, `NaN` and `Infinity`\nvalues return 0.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}},"moduleName":"Data.Int","name":"trunc","packageInfo":{"tag":"package","value":"integers"},"score":5,"sourceSpan":{"end":{"column":23,"line":61},"name":".spago\\p\\integers-6.0.0\\src\\Data\\Int.purs","start":{"column":1,"line":61}}}]],["try",[{"comments":"Runs an Eff and returns eventual Exceptions as a `Left` value. If the\ncomputation succeeds the result gets wrapped in a `Right`.\n\nFor example:\n\n```purescript\nmain :: Effect Unit\nmain = do\n  result <- try (readTextFile UTF8 \"README.md\")\n  case result of\n    Right lines ->\n      Console.log (\"README: \\n\" <> lines )\n    Left error ->\n      Console.error (\"Couldn't open README.md. Error was: \" <> show error)\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Exception"],"Error"]}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}}},"moduleName":"Effect.Exception","name":"try","packageInfo":{"tag":"package","value":"exceptions"},"score":6,"sourceSpan":{"end":{"column":53,"line":109},"name":".spago\\p\\exceptions-6.1.0\\src\\Effect\\Exception.purs","start":{"column":1,"line":109}}},{"comments":"Return `Right` if the given action succeeds, `Left` if it throws.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"e","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"e"},{"tag":"TypeVar","annotation":null,"contents":"m"}],"constraintClass":[["Control","Monad","Error","Class"],"MonadError"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","annotation":null,"contents":"e"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Control.Monad.Error.Class","name":"try","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":20,"line":66},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Monad\\Error\\Class.purs","start":{"column":1,"line":62}}}]],["tryput",[{"comments":"Attempts to synchronously fill an AVar. If the AVar is already filled,\nthis will do nothing. Returns true or false depending on if it succeeded.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}]},"skolem":null}}},"moduleName":"Effect.AVar","name":"tryPut","packageInfo":{"tag":"package","value":"avar"},"score":1,"sourceSpan":{"end":{"column":50,"line":59},"name":".spago\\p\\avar-5.0.1\\src\\Effect\\AVar.purs","start":{"column":1,"line":59}}},{"comments":"Attempts to synchronously fill an AVar. If the AVar is already filled,\nthis will do nothing. Returns true or false depending on if it succeeded.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}]}]},"skolem":null}}},"moduleName":"Effect.Aff.AVar","name":"tryPut","packageInfo":{"tag":"package","value":"avar"},"score":1,"sourceSpan":{"end":{"column":47,"line":58},"name":".spago\\p\\avar-5.0.1\\src\\Effect\\Aff\\AVar.purs","start":{"column":1,"line":58}}}]],["tryread",[{"comments":"Attempts to synchronously read an AVar. If the AVar is empty, this will\nreturn `Nothing`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}}},"moduleName":"Effect.AVar","name":"tryRead","packageInfo":{"tag":"package","value":"avar"},"score":1,"sourceSpan":{"end":{"column":48,"line":82},"name":".spago\\p\\avar-5.0.1\\src\\Effect\\AVar.purs","start":{"column":1,"line":82}}},{"comments":"Attempts to synchronously read an AVar. If the AVar is empty, this will\nreturn `Nothing`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}}},"moduleName":"Effect.Aff.AVar","name":"tryRead","packageInfo":{"tag":"package","value":"avar"},"score":1,"sourceSpan":{"end":{"column":45,"line":71},"name":".spago\\p\\avar-5.0.1\\src\\Effect\\Aff\\AVar.purs","start":{"column":1,"line":71}}}]],["trytake",[{"comments":"Attempts to synchronously take an AVar value, leaving it empty. If the\nAVar is empty, this will return `Nothing`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}}},"moduleName":"Effect.AVar","name":"tryTake","packageInfo":{"tag":"package","value":"avar"},"score":1,"sourceSpan":{"end":{"column":48,"line":71},"name":".spago\\p\\avar-5.0.1\\src\\Effect\\AVar.purs","start":{"column":1,"line":71}}},{"comments":"Attempts to synchronously take an AVar value, leaving it empty. If the\nAVar is empty, this will return `Nothing`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","AVar"],"AVar"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]},"skolem":null}}},"moduleName":"Effect.Aff.AVar","name":"tryTake","packageInfo":{"tag":"package","value":"avar"},"score":1,"sourceSpan":{"end":{"column":45,"line":45},"name":".spago\\p\\avar-5.0.1\\src\\Effect\\Aff\\AVar.purs","start":{"column":1,"line":45}}}]],["rt",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Elements"],"Node"]},{"tag":"TypeConstructor","annotation":null,"contents":[["DOM","HTML","Indexed"],"HTMLrt"]}]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"rt","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":36,"line":736},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":736}}}]],["rt_",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"rt_","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":48,"line":739},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":739}}}]],["rtraverse",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"t","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"c","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"t"}],"constraintClass":[["Data","Bitraversable"],"Bitraversable"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"c"}]}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"t"},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"c"}]}}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Data.Bitraversable","name":"rtraverse","packageInfo":{"tag":"package","value":"foldable-traversable"},"score":19,"sourceSpan":{"end":{"column":15,"line":86},"name":".spago\\p\\foldable-traversable-6.0.0\\src\\Data\\Bitraversable.purs","start":{"column":1,"line":80}}}]],["query",[{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"data","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","annotation":null,"contents":"query"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenQ"],"HalogenQ"]},{"tag":"TypeVar","annotation":null,"contents":"query"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"input"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]}}},"moduleName":"Halogen.Query.HalogenQ","name":"Query","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":10,"line":13},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\HalogenQ.purs","start":{"column":3,"line":13}}},{"comments":"Sends a query to a child of a component at the specified slot.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"state","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"action","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"label","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slots","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"query","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output'","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slot","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"_1","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"label"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Data","Slot"],"Slot"]},{"tag":"TypeVar","annotation":null,"contents":"query"}]},{"tag":"TypeVar","annotation":null,"contents":"output'"}]},{"tag":"TypeVar","annotation":null,"contents":"slot"}]}},{"tag":"TypeVar","annotation":null,"contents":"_1"},{"tag":"TypeVar","annotation":null,"contents":"slots"}],"constraintClass":[["Prim","Row"],"Cons"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"label"}],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"slot"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","annotation":null,"contents":"label"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"slot"}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"query"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"HalogenM"]},{"tag":"TypeVar","annotation":null,"contents":"state"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"output"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.Query.HalogenM","name":"query","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":52,"line":142},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\HalogenM.purs","start":{"column":1,"line":134}}}]],["queryall",[{"comments":"Sends a query to all children of a component at a given slot label.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"state","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"action","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"label","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slots","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"query","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"output'","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"slot","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"_1","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"label"},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Data","Slot"],"Slot"]},{"tag":"TypeVar","annotation":null,"contents":"query"}]},{"tag":"TypeVar","annotation":null,"contents":"output'"}]},{"tag":"TypeVar","annotation":null,"contents":"slot"}]}},{"tag":"TypeVar","annotation":null,"contents":"_1"},{"tag":"TypeVar","annotation":null,"contents":"slots"}],"constraintClass":[["Prim","Row"],"Cons"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"label"}],"constraintClass":[["Data","Symbol"],"IsSymbol"],"constraintData":null,"constraintKindArgs":[]},{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"slot"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Type","Proxy"],"Proxy"]},{"tag":"TypeVar","annotation":null,"contents":"label"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"query"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query","HalogenM"],"HalogenM"]},{"tag":"TypeVar","annotation":null,"contents":"state"}]},{"tag":"TypeVar","annotation":null,"contents":"action"}]},{"tag":"TypeVar","annotation":null,"contents":"slots"}]},{"tag":"TypeVar","annotation":null,"contents":"output"}]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"slot"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}}]}]}]}]}]}]},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.Query.HalogenM","name":"queryAll","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":55,"line":154},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query\\HalogenM.purs","start":{"column":1,"line":147}}}]],["queryselector",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"newtype","typeArguments":[]}},"moduleName":"Web.DOM.ParentNode","name":"QuerySelector","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":45,"line":42},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\ParentNode.purs","start":{"column":1,"line":42}}},{"hashAnchor":"v","info":{"tag":"dataConstructor","value":{"dataDeclType":"newtype","type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","ParentNode"],"QuerySelector"]}]}}},"moduleName":"Web.DOM.ParentNode","name":"QuerySelector","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":45,"line":42},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\ParentNode.purs","start":{"column":23,"line":42}}},{"comments":"Finds the first child that is an element that matches the selector(s), or\nNothing if no such element exists.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","ParentNode"],"QuerySelector"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","ParentNode"],"ParentNode"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","Internal","Types"],"Element"]}]}}]}]}]}},"moduleName":"Web.DOM.ParentNode","name":"querySelector","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":71,"line":50},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\ParentNode.purs","start":{"column":1,"line":50}}}]],["queryselectorall",[{"comments":"Finds all the child elements that matches the selector(s).\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","ParentNode"],"QuerySelector"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","ParentNode"],"ParentNode"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","Internal","Types"],"NodeList"]}]}]}]}},"moduleName":"Web.DOM.ParentNode","name":"querySelectorAll","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":82,"line":56},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\ParentNode.purs","start":{"column":1,"line":56}}}]],["queueorrun",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Ref"],"Ref"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}}]}}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]}},"moduleName":"Halogen.Aff.Driver.Eval","name":"queueOrRun","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":14,"line":186},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Aff\\Driver\\Eval.purs","start":{"column":1,"line":183}}}]],["queuingstrategy",[{"hashAnchor":"t","info":{"tag":"data","value":{"dataDeclType":"data","typeArguments":[{"name":"t0"}]}},"moduleName":"Web.Streams.QueuingStrategy","name":"QueuingStrategy","packageInfo":{"tag":"package","value":"web-streams"},"score":2,"sourceSpan":{"end":{"column":52,"line":6},"name":".spago\\p\\web-streams-4.0.0\\src\\Web\\Streams\\QueuingStrategy.purs","start":{"column":1,"line":6}}}]],["quot",[{"comments":"The `quot` function provides _truncating_ integer division (see the\ndocumentation for the `EuclideanRing` class). It is identical to `div` in\nthe `EuclideanRing Int` instance if the dividend is positive, but will be\nslightly different if the dividend is negative. For example:\n\n```purescript\ndiv 2 3 == 0\nquot 2 3 == 0\n\ndiv (-2) 3 == (-1)\nquot (-2) 3 == 0\n\ndiv 2 (-3) == 0\nquot 2 (-3) == 0\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Int"]}]}]}},"moduleName":"Data.Int","name":"quot","packageInfo":{"tag":"package","value":"integers"},"score":5,"sourceSpan":{"end":{"column":41,"line":227},"name":".spago\\p\\integers-6.0.0\\src\\Data\\Int.purs","start":{"column":1,"line":227}}}]],["quote",[{"comments":"The Quote type constructor renders any concrete type as a Doc\nto be used in a custom type error.\n\nFor more information, see\n[the Custom Type Errors guide](https://github.com/purescript/documentation/blob/master/guides/Custom-Type-Errors.md).\n","hashAnchor":"t","info":{"tag":"externData","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"k","kind":{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Type"]},"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim","TypeError"],"Doc"]}]},"skolem":null}}},"moduleName":"Prim.TypeError","name":"Quote","packageInfo":{"tag":"builtin"},"score":0}]],["quotelabel",[{"comments":"The `QuoteLabel` type constructor will produce a `Doc` when given a `Symbol`. When the resulting `Doc` is rendered\nfor a `Warn` or `Fail` constraint, a syntactically valid label will be produced, escaping with quotes as needed.\n\nFor more information, see\n[the Custom Type Errors guide](https://github.com/purescript/documentation/blob/master/guides/Custom-Type-Errors.md).\n","hashAnchor":"t","info":{"tag":"externData","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Symbol"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim","TypeError"],"Doc"]}]}},"moduleName":"Prim.TypeError","name":"QuoteLabel","packageInfo":{"tag":"builtin"},"score":0}]],["ownerdocument",[{"comments":"The document the node belongs to, unless the node is a document in which\ncase the value is Nothing.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect"],"Effect"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","Document"],"Document"]}]}}]}]}},"moduleName":"Web.DOM.Node","name":"ownerDocument","packageInfo":{"tag":"package","value":"web-dom"},"score":3,"sourceSpan":{"end":{"column":49,"line":76},"name":".spago\\p\\web-dom-6.0.0\\src\\Web\\DOM\\Node.purs","start":{"column":1,"line":76}}}]],["owns",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"r","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Properties"],"IProp"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Properties.ARIA","name":"owns","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":40,"line":76},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Properties\\ARIA.purs","start":{"column":1,"line":76}}}]]]