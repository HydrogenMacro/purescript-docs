// This file was generated by docs-search.
window.DocsSearchIndex["43"] = [["b_",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"w","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Array"]},{"tag":"ParensInType","annotation":null,"contents":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.HTML.Elements","name":"b_","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":47,"line":343},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML\\Elements.purs","start":{"column":1,"line":343}}}]],["_boolean",[{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Argonaut.Prisms","name":"_Boolean","packageInfo":{"tag":"package","value":"argonaut-traversals"},"score":1,"sourceSpan":{"end":{"column":32,"line":11},"name":".spago\\p\\argonaut-traversals-10.0.0\\src\\Data\\Argonaut\\Prisms.purs","start":{"column":1,"line":11}}}]],["+",[{"comments":"Applies a type alias of open rows to a set of rows. The primary use case\nthis operator is as convenient sugar for combining open rows without\nparentheses.\n```purescript\ntype Rows1 r = (a :: Int, b :: String | r)\ntype Rows2 r = (c :: Boolean | r)\ntype Rows3 r = (Rows1 + Rows2 + r)\ntype Rows4 r = (d :: String | Rows1 + Rows2 + r)\n```\n","hashAnchor":"t","info":{"tag":"typeAlias"},"moduleName":"Type.Row","name":"type (+)","packageInfo":{"tag":"package","value":"typelevel-prelude"},"score":3,"sourceSpan":{"end":{"column":28,"line":22},"name":".spago\\p\\typelevel-prelude-7.0.0\\src\\Type\\Row.purs","start":{"column":1,"line":22}}},{"hashAnchor":"v","info":{"tag":"valueAlias"},"moduleName":"Data.Semiring","name":"(+)","packageInfo":{"tag":"package","value":"prelude"},"score":55,"sourceSpan":{"end":{"column":18,"line":50},"name":".spago\\p\\prelude-6.0.2\\src\\Data\\Semiring.purs","start":{"column":1,"line":50}}}]]]