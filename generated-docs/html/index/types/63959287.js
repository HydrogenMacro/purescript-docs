// This file was generated by docs-search
window.DocsSearchTypeIndex["63959287"] = [{"comments":"The `Env` comonad is a synonym for the `EnvT` comonad transformer, applied\nto the `Identity` monad.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"e"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Comonad","Env","Trans"],"EnvT"]},{"tag":"TypeVar","annotation":null,"contents":"e"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Identity"],"Identity"]}]}}},"moduleName":"Control.Comonad.Env","name":"Env","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":29,"line":24},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Comonad\\Env.purs","start":{"column":1,"line":24}}},{"comments":"The `Store` comonad is a synonym for the `StoreT` comonad transformer, applied\nto the `Identity` monad.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"s"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Comonad","Store","Trans"],"StoreT"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Identity"],"Identity"]}]}}},"moduleName":"Control.Comonad.Store","name":"Store","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":33,"line":22},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Comonad\\Store.purs","start":{"column":1,"line":22}}},{"comments":"The `Traced` comonad is a synonym for the `TracedT` comonad transformer, applied\nto the `Identity` monad.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"m"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Comonad","Traced","Trans"],"TracedT"]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Identity"],"Identity"]}]}}},"moduleName":"Control.Comonad.Traced","name":"Traced","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":35,"line":21},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Comonad\\Traced.purs","start":{"column":1,"line":21}}},{"comments":"The `Cont` monad is a synonym for the `ContT` monad transformer applied to\nthe `Identity` monad.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"r"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Cont","Trans"],"ContT"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Identity"],"Identity"]}]}}},"moduleName":"Control.Monad.Cont","name":"Cont","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":31,"line":23},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Monad\\Cont.purs","start":{"column":1,"line":23}}},{"comments":"A parametrizable exception monad; computations are either exceptions or\npure values. If an exception is thrown (see `throwError`), the computation\nterminates with that value. Exceptions may also be caught with `catchError`,\nallowing the computation to resume and exit successfully.\n\nThe type parameter `e` is the type of exceptions, and `a` is the type\nof successful results.\n\nA mechanism for trying many different computations until one succeeds is\nprovided via the `Alt` instance, specifically the `(<|>)` function.\nThe first computation to succeed is returned; if all fail, the exceptions\nare combined using their `Semigroup` instance. The `Plus` instance goes\nfurther and adds the possibility of a computation failing with an 'empty'\nexception; naturally, this requires the stronger constraint of a `Monoid`\ninstance for the exception type.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"e"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Except","Trans"],"ExceptT"]},{"tag":"TypeVar","annotation":null,"contents":"e"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Identity"],"Identity"]}]}}},"moduleName":"Control.Monad.Except","name":"Except","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":35,"line":35},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Monad\\Except.purs","start":{"column":1,"line":35}}},{"comments":"The `Reader` monad is a synonym for the `ReaderT` monad transformer, applied\nto the `Identity` monad.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"r"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Reader","Trans"],"ReaderT"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Identity"],"Identity"]}]}}},"moduleName":"Control.Monad.Reader","name":"Reader","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":35,"line":22},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Monad\\Reader.purs","start":{"column":1,"line":22}}},{"comments":"The `State` monad is a synonym for the `StateT` monad transformer, applied\nto the `Identity` monad.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"s"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","State","Trans"],"StateT"]},{"tag":"TypeVar","annotation":null,"contents":"s"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Identity"],"Identity"]}]}}},"moduleName":"Control.Monad.State","name":"State","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":33,"line":25},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Monad\\State.purs","start":{"column":1,"line":25}}},{"comments":"The `Writer` monad is a synonym for the `WriterT` monad transformer, applied\nto the `Identity` monad.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"w"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Writer","Trans"],"WriterT"]},{"tag":"TypeVar","annotation":null,"contents":"w"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Identity"],"Identity"]}]}}},"moduleName":"Control.Monad.Writer","name":"Writer","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":35,"line":24},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Monad\\Writer.purs","start":{"column":1,"line":24}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"String"]}]}},"moduleName":"Data.Argonaut.Prisms","name":"_String","packageInfo":{"tag":"package","value":"argonaut-traversals"},"score":1,"sourceSpan":{"end":{"column":30,"line":17},"name":".spago\\p\\argonaut-traversals-10.0.0\\src\\Data\\Argonaut\\Prisms.purs","start":{"column":1,"line":17}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Number"]}]}},"moduleName":"Data.Argonaut.Prisms","name":"_Number","packageInfo":{"tag":"package","value":"argonaut-traversals"},"score":1,"sourceSpan":{"end":{"column":30,"line":14},"name":".spago\\p\\argonaut-traversals-10.0.0\\src\\Data\\Argonaut\\Prisms.purs","start":{"column":1,"line":14}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Boolean"]}]}},"moduleName":"Data.Argonaut.Prisms","name":"_Boolean","packageInfo":{"tag":"package","value":"argonaut-traversals"},"score":1,"sourceSpan":{"end":{"column":32,"line":11},"name":".spago\\p\\argonaut-traversals-10.0.0\\src\\Data\\Argonaut\\Prisms.purs","start":{"column":1,"line":11}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Prism'"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}},"moduleName":"Data.Argonaut.Prisms","name":"_Null","packageInfo":{"tag":"package","value":"argonaut-traversals"},"score":1,"sourceSpan":{"end":{"column":26,"line":8},"name":".spago\\p\\argonaut-traversals-10.0.0\\src\\Data\\Argonaut\\Prisms.purs","start":{"column":1,"line":8}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Traversals","name":"_JsonObject","packageInfo":{"tag":"package","value":"argonaut-traversals"},"score":1,"sourceSpan":{"end":{"column":36,"line":22},"name":".spago\\p\\argonaut-traversals-10.0.0\\src\\Data\\Argonaut\\Traversals.purs","start":{"column":1,"line":22}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Traversals","name":"_JsonArray","packageInfo":{"tag":"package","value":"argonaut-traversals"},"score":1,"sourceSpan":{"end":{"column":35,"line":19},"name":".spago\\p\\argonaut-traversals-10.0.0\\src\\Data\\Argonaut\\Traversals.purs","start":{"column":1,"line":19}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Traversals","name":"_JsonString","packageInfo":{"tag":"package","value":"argonaut-traversals"},"score":1,"sourceSpan":{"end":{"column":36,"line":16},"name":".spago\\p\\argonaut-traversals-10.0.0\\src\\Data\\Argonaut\\Traversals.purs","start":{"column":1,"line":16}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Traversals","name":"_JsonNumber","packageInfo":{"tag":"package","value":"argonaut-traversals"},"score":1,"sourceSpan":{"end":{"column":36,"line":13},"name":".spago\\p\\argonaut-traversals-10.0.0\\src\\Data\\Argonaut\\Traversals.purs","start":{"column":1,"line":13}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Traversals","name":"_JsonBoolean","packageInfo":{"tag":"package","value":"argonaut-traversals"},"score":1,"sourceSpan":{"end":{"column":37,"line":10},"name":".spago\\p\\argonaut-traversals-10.0.0\\src\\Data\\Argonaut\\Traversals.purs","start":{"column":1,"line":10}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Lens","Types"],"Traversal'"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Argonaut","Core"],"Json"]}]}},"moduleName":"Data.Argonaut.Traversals","name":"_JsonNull","packageInfo":{"tag":"package","value":"argonaut-traversals"},"score":1,"sourceSpan":{"end":{"column":34,"line":7},"name":".spago\\p\\argonaut-traversals-10.0.0\\src\\Data\\Argonaut\\Traversals.purs","start":{"column":1,"line":7}}},{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"}],"type":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","Either","Nested"],"\\/"]},{"tag":"TypeVar","annotation":null,"contents":"a"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Void"],"Void"]}]}}},"moduleName":"Data.Either.Nested","name":"Either1","packageInfo":{"tag":"package","value":"either"},"score":21,"sourceSpan":{"end":{"column":27,"line":49},"name":".spago\\p\\either-6.1.0\\src\\Data\\Either\\Nested.purs","start":{"column":1,"line":49}}},{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"},{"name":"z"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Coproduct"],"Coproduct"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"z"}]}}},"moduleName":"Data.Functor.Coproduct.Nested","name":"C2","packageInfo":{"tag":"package","value":"functors"},"score":4,"sourceSpan":{"end":{"column":28,"line":32},"name":".spago\\p\\functors-5.0.0\\src\\Data\\Functor\\Coproduct\\Nested.purs","start":{"column":1,"line":32}}},{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"},{"name":"z"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Product"],"Product"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"z"}]}}},"moduleName":"Data.Functor.Product.Nested","name":"T2","packageInfo":{"tag":"package","value":"functors"},"score":4,"sourceSpan":{"end":{"column":26,"line":31},"name":".spago\\p\\functors-5.0.0\\src\\Data\\Functor\\Product\\Nested.purs","start":{"column":1,"line":31}}},{"comments":"Reverse a list.\n\nRunning time: `O(n)`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]}]}},"moduleName":"Data.List","name":"reverse","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":24,"line":365},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List.purs","start":{"column":1,"line":365}}},{"comments":"Get the last element in a list, or `Nothing` if the list is empty.\n\nRunning time: `O(n)`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]}]}},"moduleName":"Data.List","name":"last","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":22,"line":237},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List.purs","start":{"column":1,"line":237}}},{"comments":"Get the first element in a list, or `Nothing` if the list is empty.\n\nRunning time: `O(1)`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]}]}},"moduleName":"Data.List","name":"head","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":22,"line":230},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List.purs","start":{"column":1,"line":230}}},{"comments":"Reverse a list.\n\nRunning time: `O(n)`\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]}]}},"moduleName":"Data.List.Lazy","name":"reverse","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":24,"line":394},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy.purs","start":{"column":1,"line":394}}},{"comments":"Get the last element in a list, or `Nothing` if the list is empty.\n\nRunning time: `O(n)`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]}]}},"moduleName":"Data.List.Lazy","name":"last","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":22,"line":257},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy.purs","start":{"column":1,"line":257}}},{"comments":"Get the first element in a list, or `Nothing` if the list is empty.\n\nRunning time: `O(1)`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]}]}},"moduleName":"Data.List.Lazy","name":"head","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":22,"line":251},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy.purs","start":{"column":1,"line":251}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]}]}},"moduleName":"Data.List.Lazy.NonEmpty","name":"init","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":31,"line":67},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy\\NonEmpty.purs","start":{"column":1,"line":67}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]}]}},"moduleName":"Data.List.Lazy.NonEmpty","name":"tail","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":31,"line":64},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy\\NonEmpty.purs","start":{"column":1,"line":64}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]}]}},"moduleName":"Data.List.Lazy.NonEmpty","name":"toList","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":33,"line":46},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy\\NonEmpty.purs","start":{"column":1,"line":46}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Lazy","Types"],"List"]}]}},"moduleName":"Data.List.Lazy.Types","name":"toList","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":31,"line":208},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Lazy\\Types.purs","start":{"column":1,"line":208}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]}]}},"moduleName":"Data.List.NonEmpty","name":"init","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":31,"line":153},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\NonEmpty.purs","start":{"column":1,"line":153}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]}]}},"moduleName":"Data.List.NonEmpty","name":"tail","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":31,"line":150},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\NonEmpty.purs","start":{"column":1,"line":150}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]}]}},"moduleName":"Data.List.NonEmpty","name":"toList","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":33,"line":125},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\NonEmpty.purs","start":{"column":1,"line":125}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"NonEmptyList"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]}]}},"moduleName":"Data.List.Types","name":"toList","packageInfo":{"tag":"package","value":"lists"},"score":7,"sourceSpan":{"end":{"column":31,"line":191},"name":".spago\\p\\lists-7.0.0\\src\\Data\\List\\Types.purs","start":{"column":1,"line":191}}},{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"},{"name":"z"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Tuple"],"Tuple"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"z"}]}}},"moduleName":"Data.Tuple.Nested","name":"T2","packageInfo":{"tag":"package","value":"tuples"},"score":23,"sourceSpan":{"end":{"column":24,"line":85},"name":".spago\\p\\tuples-7.0.0\\src\\Data\\Tuple\\Nested.purs","start":{"column":1,"line":85}}},{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Tuple","Nested"],"T2"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}}},"moduleName":"Data.Tuple.Nested","name":"Tuple1","packageInfo":{"tag":"package","value":"tuples"},"score":23,"sourceSpan":{"end":{"column":26,"line":74},"name":".spago\\p\\tuples-7.0.0\\src\\Data\\Tuple\\Nested.purs","start":{"column":1,"line":74}}},{"comments":"Blocks until the fiber completes, yielding the result. If the fiber\nthrows an exception, it is rethrown in the current fiber.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Fiber"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]}]}},"moduleName":"Effect.Aff","name":"joinFiber","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":26,"line":196},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff.purs","start":{"column":1,"line":196}}},{"comments":"Lift a FFI definition into an `Aff`. `EffectFnAff` makes use of `EffectFn` so\n`Effect` thunks are unnecessary. A definition might follow this example:\n\n```javascript\nexports._myAff = function (onError, onSuccess) {\n  var cancel = doSomethingAsync(function (err, res) {\n    if (err) {\n      onError(err);\n    } else {\n      onSuccess(res);\n    }\n  });\n  return function (cancelError, onCancelerError, onCancelerSuccess) {\n    cancel();\n    onCancelerSuccess();\n  };\n};\n```\n\n```purescript\nforeign import _myAff :: EffectFnAff String\n\nmyAff :: Aff String\nmyAff = fromEffectFnAff _myAff\n````\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff","Compat"],"EffectFnAff"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Aff"],"Aff"]}]}},"moduleName":"Effect.Aff.Compat","name":"fromEffectFnAff","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":38,"line":48},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff\\Compat.purs","start":{"column":1,"line":48}}},{"hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[{"name":"a"}],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Uncurried"],"EffectFn1"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}}},"moduleName":"Effect.Aff.Compat","name":"EffectFnCb","packageInfo":{"tag":"package","value":"aff"},"score":5,"sourceSpan":{"end":{"column":37,"line":17},"name":".spago\\p\\aff-8.0.0\\src\\Effect\\Aff\\Compat.purs","start":{"column":1,"line":17}}},{"comments":"A type useful for a chunk of HTML with no slot-embedding or query-raising.\n\nOften a polymorphic usage of `HTML` is good enough for this, but sometimes\nit's useful to have a type like this (and accompanying coercion) when doing\nthings like creating components that accept a chunk of HTML as part of\ntheir configuration.\n","hashAnchor":"t","info":{"tag":"typeSynonym","value":{"arguments":[],"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","HTML","Core"],"HTML"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Void"],"Void"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Void"],"Void"]}]}}},"moduleName":"Halogen.HTML","name":"PlainHTML","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":32,"line":50},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\HTML.purs","start":{"column":1,"line":50}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Effect","Uncurried"],"EffectFn1"]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","Internal","Types"],"Node"]}]},{"tag":"TypeConstructor","annotation":null,"contents":[["Web","DOM","Internal","Types"],"Node"]}]}},"moduleName":"Halogen.VDom.Util","name":"parentNode","packageInfo":{"tag":"package","value":"halogen-vdom"},"score":1,"sourceSpan":{"end":{"column":36,"line":153},"name":".spago\\p\\halogen-vdom-8.0.0\\src\\Halogen\\VDom\\Util.purs","start":{"column":1,"line":152}}}]