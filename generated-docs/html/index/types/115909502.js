// This file was generated by docs-search
window.DocsSearchTypeIndex["115909502"] = [{"comments":"Run a free applicative functor using the applicative instance for\nthe type constructor `f`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Applicative"],"Applicative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Applicative","Free"],"FreeAp"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Control.Applicative.Free","name":"retractFreeAp","packageInfo":{"tag":"package","value":"freeap"},"score":1,"sourceSpan":{"end":{"column":64,"line":112},"name":".spago\\p\\freeap-7.0.0\\src\\Control\\Applicative\\Free.purs","start":{"column":1,"line":112}}},{"comments":"Run a computation in the `IdentityT` monad.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"m","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Identity","Trans"],"IdentityT"]},{"tag":"TypeVar","annotation":null,"contents":"m"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"m"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Control.Monad.Identity.Trans","name":"runIdentityT","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":49,"line":34},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Monad\\Identity\\Trans.purs","start":{"column":1,"line":34}}},{"comments":"Drain a `ListT`, running it to completion and discarding all values.\nStack safe: Uses tail call optimization.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Monad","Rec","Class"],"MonadRec"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Control.Monad.List.Trans","name":"runListTRec","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":64,"line":80},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Monad\\List\\Trans.purs","start":{"column":1,"line":80}}},{"comments":"Drain a `ListT`, running it to completion and discarding all values.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Monad"],"Monad"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","List","Trans"],"ListT"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Unit"],"Unit"]}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Control.Monad.List.Trans","name":"runListT","packageInfo":{"tag":"package","value":"transformers"},"score":6,"sourceSpan":{"end":{"column":55,"line":75},"name":".spago\\p\\transformers-6.1.0\\src\\Control\\Monad\\List\\Trans.purs","start":{"column":1,"line":75}}},{"comments":"Turns an `Either` into a `Maybe`, by throwing potential `Right` values away and converting\nthem into `Nothing`. `Left` values get turned into `Just`s.\n\n```purescript\nblush (Left \"ParseError\") = Just \"Parse Error\"\nblush (Right 42) = Nothing\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Either","name":"blush","packageInfo":{"tag":"package","value":"either"},"score":21,"sourceSpan":{"end":{"column":43,"line":293},"name":".spago\\p\\either-6.1.0\\src\\Data\\Either.purs","start":{"column":1,"line":293}}},{"comments":"Turns an `Either` into a `Maybe`, by throwing potential `Left` values away and converting\nthem into `Nothing`. `Right` values get turned into `Just`s.\n\n```purescript\nhush (Left \"ParseError\") = Nothing\nhush (Right 42) = Just 42\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"b","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Either"],"Either"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Maybe"],"Maybe"]},{"tag":"TypeVar","annotation":null,"contents":"b"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Either","name":"hush","packageInfo":{"tag":"package","value":"either"},"score":21,"sourceSpan":{"end":{"column":42,"line":283},"name":".spago\\p\\either-6.1.0\\src\\Data\\Either.purs","start":{"column":1,"line":283}}},{"comments":"The set of keys of the given map.\nSee also `Data.Set.fromMap`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"k","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"v","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Set"],"Set"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Map","name":"keys","packageInfo":{"tag":"package","value":"ordered-collections"},"score":5,"sourceSpan":{"end":{"column":37,"line":24},"name":".spago\\p\\ordered-collections-3.2.0\\src\\Data\\Map.purs","start":{"column":1,"line":24}}},{"comments":"Get a list of the values contained in a map\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"k","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"v","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Map.Internal","name":"values","packageInfo":{"tag":"package","value":"ordered-collections"},"score":5,"sourceSpan":{"end":{"column":40,"line":572},"name":".spago\\p\\ordered-collections-3.2.0\\src\\Data\\Map\\Internal.purs","start":{"column":1,"line":572}}},{"comments":"Get a list of the keys contained in a map\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"k","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"v","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Map","Internal"],"Map"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]},{"tag":"TypeVar","annotation":null,"contents":"v"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","List","Types"],"List"]},{"tag":"TypeVar","annotation":null,"contents":"k"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Map.Internal","name":"keys","packageInfo":{"tag":"package","value":"ordered-collections"},"score":5,"sourceSpan":{"end":{"column":38,"line":568},"name":".spago\\p\\ordered-collections-3.2.0\\src\\Data\\Map\\Internal.purs","start":{"column":1,"line":568}}},{"comments":"Get everything but the 'first' element of a non-empty container.\n\n```purescript\ntail (1 :| [2, 3]) == [2, 3]\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.NonEmpty","name":"tail","packageInfo":{"tag":"package","value":"nonempty"},"score":7,"sourceSpan":{"end":{"column":40,"line":117},"name":".spago\\p\\nonempty-7.0.0\\src\\Data\\NonEmpty.purs","start":{"column":1,"line":117}}},{"comments":"Returns the `alt` (`<|>`) result of:\n- The first element lifted to the container of the remaining elements.\n- The remaining elements.\n\n```purescript\nimport Data.Maybe(Maybe(..))\n\noneOf (1 :| Nothing) == Just 1\noneOf (1 :| Just 2) == Just 1\n\noneOf (1 :| [2, 3]) == [1,2,3]\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"ConstrainedType","annotation":null,"contents":[{"constraintAnn":null,"constraintArgs":[{"tag":"TypeVar","annotation":null,"contents":"f"}],"constraintClass":[["Control","Alternative"],"Alternative"],"constraintData":null,"constraintKindArgs":[]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","NonEmpty"],"NonEmpty"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.NonEmpty","name":"oneOf","packageInfo":{"tag":"package","value":"nonempty"},"score":7,"sourceSpan":{"end":{"column":58,"line":101},"name":".spago\\p\\nonempty-7.0.0\\src\\Data\\NonEmpty.purs","start":{"column":1,"line":101}}},{"comments":"Lower a value of type `Yoneda f a` to the type constructor `f`.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Yoneda"],"Yoneda"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Data.Yoneda","name":"lowerYoneda","packageInfo":{"tag":"package","value":"free"},"score":1,"sourceSpan":{"end":{"column":45,"line":67},"name":".spago\\p\\free-7.1.0\\src\\Data\\Yoneda.purs","start":{"column":1,"line":67}}},{"comments":"Takes a data constructor of query algebra `f` and creates a request query.\n\nFor example:\n\n```purescript\ndata Query a = GetTickCount (Int -> a)\n\ngetTickCount :: forall o. H.HalogenIO Query o Aff -> Aff (Maybe Int)\ngetTickCount app = app.query (H.mkRequest GetTickCount)\n```\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","Query"],"Request"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.Query","name":"mkRequest","packageInfo":{"tag":"package","value":"halogen"},"score":0,"sourceSpan":{"end":{"column":44,"line":111},"name":".spago\\p\\halogen-7.0.0\\src\\Halogen\\Query.purs","start":{"column":1,"line":111}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"i","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Halogen","VDom","Thunk"],"Thunk"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeVar","annotation":null,"contents":"i"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.VDom.Thunk","name":"runThunk","packageInfo":{"tag":"package","value":"halogen-vdom"},"score":1,"sourceSpan":{"end":{"column":34,"line":81},"name":".spago\\p\\halogen-vdom-8.0.0\\src\\Halogen\\VDom\\Thunk.purs","start":{"column":1,"line":81}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"r","kind":null,"type":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Prim"],"Function"]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Foreign","Object","ST"],"STObject"]},{"tag":"TypeVar","annotation":null,"contents":"r"}]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Foreign","Object"],"Object"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},"skolem":null}},"skolem":null}}},"moduleName":"Halogen.VDom.Util","name":"unsafeFreeze","packageInfo":{"tag":"package","value":"halogen-vdom"},"score":1,"sourceSpan":{"end":{"column":46,"line":60},"name":".spago\\p\\halogen-vdom-8.0.0\\src\\Halogen\\VDom\\Util.purs","start":{"column":1,"line":60}}}]