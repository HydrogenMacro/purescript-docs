// This file was generated by docs-search
window.DocsSearchTypeIndex["1736122355"] = [{"comments":"Lift an impure value described by the generating type constructor `f` into\nthe free monad.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Control","Monad","Free"],"Free"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]}]},"skolem":null}}},"moduleName":"Control.Monad.Free","name":"liftF","packageInfo":{"tag":"package","value":"free"},"score":1,"sourceSpan":{"end":{"column":31,"line":123},"name":".spago\\p\\free-7.1.0\\src\\Control\\Monad\\Free.purs","start":{"column":1,"line":123}}},{"comments":"Lift a value described by the type constructor `f` to `Coyoneda f`.\n\nNote that for any functor `f` `liftCoyoneda` has a right inverse\n`lowerCoyoneda`:\n```purescript\nliftCoyoneda <<< lowerCoyoneda $ (Coyoneda e)\n= liftCoyoneda <<< unCoyoneda map $ (Coyoneda e)\n= liftCoyonead (runExists (\\(CoyonedaF k fi) -> map k fi) e)\n= liftCoyonead (Coyoneda e)\n= coyoneda identity (Coyoneda e)\n= Coyoneda e\n```\nMoreover if `f` is a `Functor` then `liftCoyoneda` is an isomorphism of\nfunctors with inverse `lowerCoyoneda`:  we already showed that\n`lowerCoyoneda <<< hoistCoyoneda identity = lowerCoyoneda` is its left inverse\nwhenever `f` is a functor.\n","hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"f","kind":null,"type":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"f"},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Coyoneda"],"Coyoneda"]},{"tag":"TypeVar","annotation":null,"contents":"f"}]}]},"skolem":null}}},"moduleName":"Data.Coyoneda","name":"liftCoyoneda","packageInfo":{"tag":"package","value":"free"},"score":1,"sourceSpan":{"end":{"column":42,"line":163},"name":".spago\\p\\free-7.1.0\\src\\Data\\Coyoneda.purs","start":{"column":1,"line":163}}},{"hashAnchor":"v","info":{"tag":"value","value":{"tag":"ForAll","annotation":null,"contents":{"visibility":"TypeVarInvisible","identifier":"a","kind":null,"type":{"tag":"BinaryNoParensType","annotation":null,"contents":[{"tag":"TypeOp","annotation":null,"contents":[["Data","NaturalTransformation"],"~>"]},{"tag":"TypeVar","annotation":null,"contents":"a"},{"tag":"TypeApp","annotation":null,"contents":[{"tag":"TypeConstructor","annotation":null,"contents":[["Data","Functor","Product","Nested"],"Product1"]},{"tag":"TypeVar","annotation":null,"contents":"a"}]}]},"skolem":null}}},"moduleName":"Data.Functor.Product.Nested","name":"product1","packageInfo":{"tag":"package","value":"functors"},"score":4,"sourceSpan":{"end":{"column":38,"line":54},"name":".spago\\p\\functors-5.0.0\\src\\Data\\Functor\\Product\\Nested.purs","start":{"column":1,"line":54}}}]